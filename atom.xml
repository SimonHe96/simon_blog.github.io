<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>遇见西门</title>
  
  <subtitle>simon96.online</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.simon96.online/"/>
  <updated>2018-11-10T06:41:56.298Z</updated>
  <id>https://www.simon96.online/</id>
  
  <author>
    <name>TDsimon</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo之本地搭建博客</title>
    <link href="https://www.simon96.online/2018/11/10/hexo-local-build/"/>
    <id>https://www.simon96.online/2018/11/10/hexo-local-build/</id>
    <published>2018-11-10T06:11:11.000Z</published>
    <updated>2018-11-10T06:41:56.298Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ol><li>欢迎在文末留言，或者点击加入<a href="https://dwz.cn/Fdk9LftN" target="_blank" rel="noopener">QQ群933583982</a>互相交流。</li><li>本文采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank" rel="noopener">CC BY-NC-SA 4.0</a> 许可协议，转载请注明出处！</li></ol><h2 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h2><p>当你的电脑已经具备<a href="https://www.simon96.online/2018/11/10/hexo-env/">Hexo博客搭建环境</a>时，现在就可以开始搭建博客了。</p><h3 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h3><p>在命令行（即Git Bash）依次运行以下命令即可：</p><p>以下<folder>，即存放Hexo初始化文件的路径， 即站点目录。</folder></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo init &lt;folder&gt;</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> &lt;folder&gt;</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install</span></span><br></pre></td></tr></table></figure><p>新建完成后，在<folder>路径下，会产生这些文件和文件夹：</folder></p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── <span class="variable">_config</span>.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── <span class="variable">_drafts</span></span><br><span class="line">|   └── <span class="variable">_posts</span></span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><p><strong>注</strong>：</p><ul><li><p>hexo相关命令均在<strong>站点目录</strong>下，用<strong>Git Bash</strong>运行。</p></li><li><p>站点配置文件：站点目录下的<code>_config.yml</code>。</p><p>​            路径为<code>&lt;folder&gt;\_config.yml</code></p></li><li><p>主题配置文件：站点目录下的<code>themes</code>文件夹下的，主题文件夹下的<code>_config.yml</code>。</p><p>​            路径为<code>&lt;folder&gt;\themes\&lt;主题文件夹&gt;\_config.yml</code></p></li></ul><h3 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h3><p>在<folder>路径下，命令行（即Git Bash）输入以下命令，运行即可：</folder></p><blockquote><p>hexo server</p></blockquote><h3 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h3><p>浏览器访问网址： <code>http://localhost:4000/</code></p><h3 id="关闭服务器"><a href="#关闭服务器" class="headerlink" title="关闭服务器"></a>关闭服务器</h3><p>在已启动服务器的命令行（即Git Bash）下，执行快捷键<code>Ctrl+C</code>，即可关闭服务器。</p><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>至此，您的Hexo博客已经搭建在本地，当启动服务器的时候，博客网址为： `<a href="http://localhost:4000/。" target="_blank" rel="noopener">http://localhost:4000/。</a></p><p>下一步：将博客推送到互联网。</p><p><strong>如果本文对您有用，谢谢打赏。</strong></p>]]></content>
    
    <summary type="html">
    
      当你的电脑已经具备Hexo博客搭建环境时，现在就可以开始搭建博客了。
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo之搭建环境</title>
    <link href="https://www.simon96.online/2018/11/10/hexo-env/"/>
    <id>https://www.simon96.online/2018/11/10/hexo-env/</id>
    <published>2018-11-10T06:04:31.000Z</published>
    <updated>2018-11-10T06:36:49.401Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ol><li>欢迎在文末留言，或者点击加入<a href="https://dwz.cn/Fdk9LftN" target="_blank" rel="noopener">QQ群933583982</a>互相交流。</li><li>本文采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank" rel="noopener">CC BY-NC-SA 4.0</a> 许可协议，转载请注明出处！</li></ol><h2 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><p>然而安装 Hexo 前，您必须安装下列应用程序：</p><ul><li><a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a></li><li><a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a></li></ul><h3 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a><a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a></h3><p>本章节我们将向大家介绍在window和Linux上安装Node.js的方法。 </p><p>本安装教程以Node.js v4.4.3 LTS(长期支持版本)版本为例。</p><p>Node.js安装包及源码下载地址为：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a>。  </p><p><img src="https://www.runoob.com/wp-content/uploads/2014/03/download-page.jpg" alt="nodejs_download"></p><p>你可以根据不同平台系统选择你需要的Node.js安装包。</p><p>Node.js 历史版本下载地址：<a href="https://nodejs.org/dist/" target="_blank" rel="noopener">https://nodejs.org/dist/</a></p><p><strong>注意：</strong>Linux上安装Node.js需要安装Python 2.6 或 2.7 ，不建议安装Python 3.0以上版本。</p><hr><h4 id="Window-上安装Node-js"><a href="#Window-上安装Node-js" class="headerlink" title="Window 上安装Node.js"></a>Window 上安装Node.js</h4><p>你可以采用以下两种方式来安装。</p><h5 id="1、Windows-安装包-msi"><a href="#1、Windows-安装包-msi" class="headerlink" title="1、Windows 安装包(.msi)"></a>1、Windows 安装包(.msi)</h5><p>32 位安装包下载地址 : <a href="https://nodejs.org/dist/v4.4.3/node-v4.4.3-x86.msi" target="_blank" rel="noopener">https://nodejs.org/dist/v4.4.3/node-v4.4.3-x86.msi</a></p><p>  64 位安装包下载地址 : <a href="https://nodejs.org/dist/v4.4.3/node-v4.4.3-x64.msi" target="_blank" rel="noopener">https://nodejs.org/dist/v4.4.3/node-v4.4.3-x64.msi</a></p><p> 本文实例以 v0.10.26 版本为例，其他版本类似， 安装步骤：</p><p>  步骤 1 : 双击下载后的安装包 <strong>v0.10.26</strong>，如下所示：</p><p>  <img src="https://www.runoob.com/wp-content/uploads/2014/03/install-node-msi-version-on-windows-step1.png" alt="install-node-msi-version-on-windows-step1"> </p><p> 步骤 2 : 点击以上的Run(运行)，将出现如下界面： </p><p> <img src="https://www.runoob.com/wp-content/uploads/2014/03/install-node-msi-version-on-windows-step2.png" alt="install-node-msi-version-on-windows-step2"> </p><p> 步骤 3 : 勾选接受协议选项，点击 next（下一步） 按钮 : </p><p> <img src="https://www.runoob.com/wp-content/uploads/2014/03/install-node-msi-version-on-windows-step3.png" alt="install-node-msi-version-on-windows-step3"> </p><p> 步骤 4 : Node.js默认安装目录为 “C:\Program Files\nodejs\” , 你可以修改目录，并点击 next（下一步）：  </p><p> <img src="https://www.runoob.com/wp-content/uploads/2014/03/install-node-msi-version-on-windows-step4.png" alt="install-node-msi-version-on-windows-step4"> </p><p> 步骤 5 : 点击树形图标来选择你需要的安装模式 , 然后点击下一步 next（下一步） </p><p> <img src="https://www.runoob.com/wp-content/uploads/2014/03/install-node-msi-version-on-windows-step5.png" alt="install-node-msi-version-on-windows-step5"> </p><p> 步骤 6 :点击 Install（安装） 开始安装Node.js。你也可以点击 Back（返回）来修改先前的配置。 然后并点击 next（下一步）： </p><p> <img src="https://www.runoob.com/wp-content/uploads/2014/03/install-node-msi-version-on-windows-step6.png" alt="install-node-msi-version-on-windows-step6"> </p><p> 安装过程： </p><p> <img src="https://www.runoob.com/wp-content/uploads/2014/03/install-node-msi-version-on-windows-step7.png" alt="install-node-msi-version-on-windows-step7"></p><p> 点击 Finish（完成）按钮退出安装向导。 </p><p> <img src="https://www.runoob.com/wp-content/uploads/2014/03/install-node-msi-version-on-windows-step8.png" alt="install-node-msi-version-on-windows-step8"> </p><p>检测PATH环境变量是否配置了Node.js，点击开始=》运行=》输入”cmd” =&gt; 输入命令”path”，输出如下结果：</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PATH=C:<span class="symbol">\o</span>raclexe<span class="symbol">\a</span>pp<span class="symbol">\o</span>racle<span class="symbol">\p</span>roduct<span class="symbol">\1</span>0.2.0<span class="symbol">\s</span>erver<span class="symbol">\b</span>in;C:<span class="symbol">\W</span>indows<span class="symbol">\s</span>ystem32;</span><br><span class="line">C:<span class="symbol">\W</span>indows;C:<span class="symbol">\W</span>indows<span class="symbol">\S</span>ystem32<span class="symbol">\W</span>bem;C:<span class="symbol">\W</span>indows<span class="symbol">\S</span>ystem32<span class="symbol">\W</span>indowsPowerShell<span class="symbol">\v</span>1.0<span class="symbol">\;</span></span><br><span class="line">c:<span class="symbol">\p</span>ython32<span class="symbol">\p</span>ython;C:<span class="symbol">\M</span>inGW<span class="symbol">\b</span>in;C:<span class="symbol">\P</span>rogram Files<span class="symbol">\G</span>TK2-Runtime<span class="symbol">\l</span>ib;</span><br><span class="line">C:<span class="symbol">\P</span>rogram Files<span class="symbol">\M</span>ySQL<span class="symbol">\M</span>ySQL Server 5.5<span class="symbol">\b</span>in;C:<span class="symbol">\P</span>rogram Files<span class="symbol">\n</span>odejs<span class="symbol">\;</span></span><br><span class="line">C:<span class="symbol">\U</span>sers<span class="symbol">\r</span>g<span class="symbol">\A</span>ppData<span class="symbol">\R</span>oaming<span class="symbol">\n</span>pm</span><br></pre></td></tr></table></figure><p>我们可以看到环境变量中已经包含了C:\Program Files\nodejs\</p><p>检查Node.js版本 </p><p> <img src="https://www.runoob.com/wp-content/uploads/2014/03/node-version-test.png" alt="node-version-test"> </p><h5 id="2、Windows-二进制文件-exe-安装"><a href="#2、Windows-二进制文件-exe-安装" class="headerlink" title="2、Windows 二进制文件 (.exe)安装"></a>2、Windows 二进制文件 (.exe)安装</h5><p>  32 位安装包下载地址 : <a href="http://nodejs.org/dist/v0.10.26/node.exe" target="_blank" rel="noopener">http://nodejs.org/dist/v0.10.26/node.exe</a> </p><p>  64 位安装包下载地址  : <a href="http://nodejs.org/dist/v0.10.26/x64/node.exe" target="_blank" rel="noopener">http://nodejs.org/dist/v0.10.26/x64/node.exe</a> </p><p> <strong>安装步骤</strong> </p><p> 步骤 1 : 双击下载的安装包 Node.exe ，将出现如下界面 : </p><p> <img src="https://www.runoob.com/wp-content/uploads/2014/03/install-node-exe-on-windows-step1.png" alt="install-node-exe-on-windows-step1"> </p><p> 点击 Run（运行）按钮将出现命令行窗口： </p><p> <img src="https://www.runoob.com/wp-content/uploads/2014/03/install-node-exe-on-windows-step21.png" alt="install-node-exe-on-windows-step21"> </p><h5 id="版本测试"><a href="#版本测试" class="headerlink" title="版本测试"></a>版本测试</h5><p> 进入 node.exe 所在的目录，如下所示： </p><p> <img src="https://www.runoob.com/wp-content/uploads/2014/03/node-version.png" alt="node-version"> </p><p> 如果你获得以上输出结果，说明你已经成功安装了Node.js。</p><hr><h4 id="Linux-上安装-Node-js"><a href="#Linux-上安装-Node-js" class="headerlink" title="Linux 上安装  Node.js"></a>Linux 上安装  Node.js</h4><h5 id="直接使用已编译好的包"><a href="#直接使用已编译好的包" class="headerlink" title="直接使用已编译好的包"></a>直接使用已编译好的包</h5><p>Node 官网已经把  linux 下载版本更改为已编译好的版本了，我们可以直接下载解压后使用：</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># wget https://nodejs.org/dist/v10<span class="meta">.9</span><span class="meta">.0</span>/node-v10<span class="meta">.9</span><span class="meta">.0</span>-linux-x64.tar.xz    // 下载</span><br><span class="line"># tar xf  node-v10<span class="meta">.9</span><span class="meta">.0</span>-linux-x64.tar.xz       // 解压</span><br><span class="line"># cd node-v10<span class="meta">.9</span><span class="meta">.0</span>-linux-x64/                  // 进入解压目录</span><br><span class="line"># ./bin/node -v                               // 执行node命令 查看版本</span><br><span class="line">v10<span class="meta">.9</span><span class="meta">.0</span></span><br></pre></td></tr></table></figure><p>解压文件的 bin 目录底下包含了 node、npm 等命令，我们可以使用 ln 命令来设置软连接：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s <span class="meta-keyword">/usr/</span>software<span class="meta-keyword">/nodejs/</span>bin/npm   <span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/bin/</span> </span><br><span class="line">ln -s <span class="meta-keyword">/usr/</span>software<span class="meta-keyword">/nodejs/</span>bin/node   <span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/bin/</span></span><br></pre></td></tr></table></figure><h5 id="Ubuntu-源码安装-Node-js"><a href="#Ubuntu-源码安装-Node-js" class="headerlink" title="Ubuntu 源码安装 Node.js"></a>Ubuntu 源码安装 Node.js</h5><p> 以下部分我们将介绍在 Ubuntu Linux 下使用源码安装 Node.js 。 其他的 Linux 系统，如 Centos 等类似如下安装步骤。 </p><p> 在 Github 上获取 Node.js 源码：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo git <span class="keyword">clone</span> <span class="title">https</span>://github.com/nodejs/<span class="keyword">node</span>.<span class="title">git</span></span><br><span class="line">Cloning into '<span class="keyword">node</span><span class="title">'...</span></span><br></pre></td></tr></table></figure><p> 修改目录权限：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chmod -R <span class="number">755</span> <span class="keyword">node</span><span class="title"></span></span><br></pre></td></tr></table></figure><p>使用 <strong>./configure</strong> 创建编译文件，并按照：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> node</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo ./configure</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo make</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo make install</span></span><br></pre></td></tr></table></figure><p>查看 node 版本：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">node</span> <span class="title">--version</span></span><br><span class="line">v0.<span class="number">10.25</span></span><br></pre></td></tr></table></figure><h5 id="Ubuntu-apt-get命令安装"><a href="#Ubuntu-apt-get命令安装" class="headerlink" title="Ubuntu apt-get命令安装"></a>Ubuntu apt-get命令安装</h5><p>命令格式如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install nodejs</span><br><span class="line">sudo apt-<span class="builtin-name">get</span> install npm</span><br></pre></td></tr></table></figure><h5 id="CentOS-下源码安装-Node-js"><a href="#CentOS-下源码安装-Node-js" class="headerlink" title="CentOS 下源码安装 Node.js"></a>CentOS 下源码安装 Node.js</h5><p>1、下载源码，你需要在<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a>下载最新的Nodejs版本，本文以v0.10.24为例:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="regexp">/usr/</span>local<span class="regexp">/src/</span></span><br><span class="line">wget http:<span class="regexp">//</span>nodejs.org<span class="regexp">/dist/</span>v0.<span class="number">10.24</span><span class="regexp">/node-v0.10.24.tar.gz</span></span><br></pre></td></tr></table></figure><p>2、解压源码 </p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf <span class="keyword">node</span><span class="title">-v0</span>.<span class="number">10.24</span>.tar.gz</span><br></pre></td></tr></table></figure><p>3、 编译安装 </p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="keyword">node</span><span class="title">-v0</span>.<span class="number">10.24</span></span><br><span class="line">./configure --<span class="attr">prefix=</span>/usr/local/<span class="keyword">node</span><span class="title">/0</span>.<span class="number">10.24</span></span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>4、 配置NODE_HOME，进入profile编辑环境变量 </p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">vim</span> /etc/<span class="keyword">profile</span></span><br></pre></td></tr></table></figure><p> 设置nodejs环境变量，在 <strong>*export PATH USER LOGNAME MAIL HOSTNAME HISTSIZE HISTCONTROL*</strong> 一行的上面添加如下内容:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#set for nodejs</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">NODE_HOME</span>=/usr/local/node/0.10.24</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$NODE_HOME</span>/bin:$PATH</span><br></pre></td></tr></table></figure><p> :wq保存并退出，编译/etc/profile 使配置生效 </p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">source</span> <span class="regexp">/etc/</span>profile</span><br></pre></td></tr></table></figure><p> 验证是否安装配置成功 </p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">node</span> <span class="title">-v</span></span><br></pre></td></tr></table></figure><p> 输出 v0.10.24 表示配置成功 </p><p> npm模块安装路径 </p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/node/<span class="number">0.10</span>.<span class="number">24</span>/<span class="class"><span class="keyword">lib</span>/<span class="title">node_modules</span>/</span></span><br></pre></td></tr></table></figure><p><strong>注：</strong>Nodejs 官网提供了编译好的Linux二进制包，你也可以下载下来直接应用。</p><hr><h4 id="Mac-OS-上安装"><a href="#Mac-OS-上安装" class="headerlink" title="Mac OS 上安装"></a>Mac OS 上安装</h4><p> 你可以通过以下两种方式在 Mac OS 上来安装 node：  </p><ul><li></li><li><p>1、在</p><p>官方下载网站</p><p>下载 pkg 安装包，直接点击安装即可。</p></li><li><p>2、使用 brew 命令来安装：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install <span class="keyword">node</span><span class="title"></span></span><br></pre></td></tr></table></figure></li></ul><hr><h4 id="在-Cloud-Studio-中运行-node-js-程序"><a href="#在-Cloud-Studio-中运行-node-js-程序" class="headerlink" title="在 Cloud Studio 中运行 node.js 程序"></a>在 Cloud Studio 中运行 node.js 程序</h4><p><strong>Cloud Studio</strong> 已经为我提供了内置的 Node.js 开发环境，我们不仅可以通过切换运行环境来编写 Node.js 代码，也可以通过 <strong>访问链接</strong> 功能来实时查看代码的运行效果，下面我通过一个例子来展示：</p><ul><li>step1：访问Cloud Studio(<a href="https://studio.dev.tencent.com/" target="_blank" rel="noopener">https://studio.dev.tencent.com/</a>)，注册/登录账户。</li><li>step2：在右侧的运行环境菜单选择：<code>&quot;Node.js&quot;</code> 运行环境</li><li>step3：在左侧代码目录中新建Node.js代码目录编写你的 Node.js 代码</li><li>step4：进入 Node.js 代码目录运行 <code>node hello.js</code> 我们在代码中引入了 <strong>http</strong> 模块，并且通过<code>http.createServer()</code>方法创建了一个 http 服务器，通过<code>listen()</code> 方法绑定了 8888 端口</li><li>step5：点击最右侧的【访问链接】选项卡，在访问链接面板中填写端口号为：8888，点击创建链接，即可点击生成的链接访问我们的 Node.js 项目</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*代码示例*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"></span><br><span class="line">http.createServer(<span class="function"><span class="keyword">function</span> (<span class="params">request, response</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送 HTTP 头部 </span></span><br><span class="line">    <span class="comment">// HTTP 状态值: 200 : OK</span></span><br><span class="line">    <span class="comment">// 内容类型: text/plain</span></span><br><span class="line">    response.writeHead(<span class="number">200</span>, &#123;<span class="string">'Content-Type'</span>: <span class="string">'text/plain'</span>&#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送响应数据 "Hello World"</span></span><br><span class="line">    response.end(<span class="string">"Hello, Universe! I'm running on Cloud Studio!\n"</span>);</span><br><span class="line">&#125;).listen(<span class="number">8888</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 终端打印如下信息</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'Server running at http://127.0.0.1:8888/'</span>);</span><br></pre></td></tr></table></figure><p><strong>Tips:</strong> 从终端中输入命令可以看出 <strong>Cloud Studio</strong> 为我们集成了 <strong>Ubuntu16.04.1 + node8.10.0</strong> 的开发环境：</p><p>有任何疑问，可以查阅<a href="https://dev.tencent.com/help/doc/cloud-studio" target="_blank" rel="noopener">帮助文档</a></p><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a><a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a></h3><p>是时候动手尝试下 Git 了，不过得先安装好它。有许多种安装方式，主要分为两种，一种是通过编译源代码来安装；另一种是使用为特定平台预编译好的安装包。</p><h4 id="从源代码安装"><a href="#从源代码安装" class="headerlink" title="从源代码安装"></a>从源代码安装</h4><p>若是条件允许，从源代码安装有很多好处，至少可以安装最新的版本。Git  的每个版本都在不断尝试改进用户体验，所以能通过源代码自己编译安装最新版本就再好不过了。有些 Linux  版本自带的安装包更新起来并不及时，所以除非你在用最新的 distro 或者 backports，那么从源代码安装其实该算是最佳选择。</p><p>Git 的工作需要调用 curl，zlib，openssl，expat，libiconv 等库的代码，所以需要先安装这些依赖工具。在有  yum 的系统上（比如 Fedora）或者有 apt-get 的系统上（比如 Debian 体系），可以用下面的命令安装：</p><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ yum install curl-devel expat-devel gettext-devel \</span><br><span class="line">  openssl-devel zlib-devel</span><br><span class="line"></span><br><span class="line">$ apt-<span class="built_in">get</span> install libcurl4-gnutls-<span class="built_in">dev</span> libexpat1-<span class="built_in">dev</span> gettext \</span><br><span class="line">  libz-<span class="built_in">dev</span> libssl-<span class="built_in">dev</span></span><br></pre></td></tr></table></figure><p>之后，从下面的 Git 官方站点下载最新版本源代码：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//git-scm.com/download</span></span><br></pre></td></tr></table></figure><p>然后编译并安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> tar -zxf git-1.7.2.2.tar.gz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> git-1.7.2.2</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> make prefix=/usr/<span class="built_in">local</span> all</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo make prefix=/usr/<span class="built_in">local</span> install</span></span><br></pre></td></tr></table></figure><p>现在已经可以用 <code>git</code> 命令了，用 <code>git</code> 把 Git 项目仓库克隆到本地，以便日后随时更新：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone git:<span class="regexp">//gi</span>t.kernel.org<span class="regexp">/pub/</span>scm<span class="regexp">/git/gi</span>t.git</span><br></pre></td></tr></table></figure><h4 id="在-Linux-上安装"><a href="#在-Linux-上安装" class="headerlink" title="在 Linux 上安装"></a>在 Linux 上安装</h4><p>如果要在 Linux 上安装预编译好的 Git 二进制安装包，可以直接用系统提供的包管理工具。在 Fedora 上用 yum 安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> yum install git-core</span></span><br></pre></td></tr></table></figure><p>在 Ubuntu 这类 Debian 体系的系统上，可以用 apt-get 安装：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apt-<span class="builtin-name">get</span> install git</span><br></pre></td></tr></table></figure><h4 id="在-Mac-上安装"><a href="#在-Mac-上安装" class="headerlink" title="在 Mac 上安装"></a>在 Mac 上安装</h4><p>在 Mac 上安装 Git 有两种方式。最容易的当属使用图形化的 Git 安装工具，界面如图 1-7，下载地址在：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>sourceforge.net<span class="regexp">/projects/gi</span>t-osx-installer<span class="regexp">/</span></span><br></pre></td></tr></table></figure><p><img src="https://git-scm.com/figures/18333fig0107-tn.png" alt="img"></p><p> 图 1-7. Git OS X 安装工具</p><p>另一种是通过 MacPorts (<code>http://www.macports.org</code>) 安装。如果已经装好了 MacPorts，用下面的命令安装 Git：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo<span class="built_in"> port </span>install git-core +svn +doc +bash_completion +gitweb</span><br></pre></td></tr></table></figure><p>这种方式就不需要再自己安装依赖库了，Macports 会帮你搞定这些麻烦事。一般上面列出的安装选项已经够用，要是你想用 Git 连接  Subversion 的代码仓库，还可以加上 +svn 选项，具体将在第八章作介绍。（译注：还有一种是使用 homebrew（<code>https://github.com/mxcl/homebrew</code>）：<code>brew install git</code>。）</p><h4 id="在-Windows-上安装"><a href="#在-Windows-上安装" class="headerlink" title="在 Windows 上安装"></a>在 Windows 上安装</h4><p>在 Windows 上安装 Git 同样轻松，有个叫做 msysGit 的项目提供了安装包，可以到 GitHub 的页面上下载 exe 安装文件并运行：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//msysgit.github.com/</span></span><br></pre></td></tr></table></figure><p>完成安装之后，就可以使用命令行的 <code>git</code> 工具（已经自带了 ssh 客户端）了，另外还有一个图形界面的 Git 项目管理工具。</p><p>给 Windows 用户的敬告：你应该在 msysGit 提供的 Unix 风格的 shell 来运行 Git。在 Unix 风格的  shell 中，可以使用本书中提及的复杂多行的命令。对于那些需要在 Windows 命令行中使用 Git  的用户，必须注意：在参数中间有空格的时候，必须使用双引号将参数括起来（在 Linux  中是单引号）；另外，如果扬抑符（^）作为参数的结尾，并且作为这一行的最后一个字符，则这个参数也需要用双引号括起来。因为扬抑符在 Windows  命令行中表示续行（译注：即下一行为这一行命令的继续）。</p><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p>安装Hexo，在命令行（即Git Bash）运行以下命令：</p><blockquote><p>npm install -g hexo-cli</p></blockquote><p>至此Hexo的环境就搭建好了，下一步</p><ol><li><p>初始化Hexo，在命令行（即Git Bash）依次运行以下命令即可：</p><p>以下<folder>，即存放Hexo初始化文件的路径， 即站点目录。</folder></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo init &lt;folder&gt;</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> &lt;folder&gt;</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install</span></span><br></pre></td></tr></table></figure><p>新建完成后，在<folder>路径下，会产生这些文件和文件夹：</folder></p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── <span class="variable">_config</span>.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── <span class="variable">_drafts</span></span><br><span class="line">|   └── <span class="variable">_posts</span></span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><p><strong>注</strong>：</p><ul><li><p>hexo相关命令均在<strong>站点目录</strong>下，用<strong>Git Bash</strong>运行。</p></li><li><p>站点配置文件：站点目录下的<code>_config.yml</code>。</p><p>​            路径为<code>&lt;folder&gt;\_config.yml</code></p></li><li><p>主题配置文件：站点目录下的<code>themes</code>文件夹下的，主题文件夹下的<code>_config.yml</code>。</p><p>​            路径为<code>&lt;folder&gt;\themes\&lt;主题文件夹&gt;\_config.yml</code></p></li></ul></li><li><p>启动服务器。在<folder>路径下，命令行（即Git Bash）输入以下命令，运行即可：</folder></p><blockquote><p>hexo server</p></blockquote></li><li><p>浏览器访问网址： <code>http://localhost:4000/</code></p></li></ol><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>至此，您的Hexo博客环境已准备完毕，下一步：<a href="https://www.simon96.online/2018/11/10/hexo-local-build/">本地搭建博客</a>。</p><p><strong>如果本文对您有用，谢谢打赏。</strong></p>]]></content>
    
    <summary type="html">
    
      工欲善其事，必先利其器。要想搭建博客，必须配置好自己的电脑环境。
    
    </summary>
    
      <category term="hexo" scheme="https://www.simon96.online/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://www.simon96.online/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Typora入门（中文版）</title>
    <link href="https://www.simon96.online/2018/10/18/Typora%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%AD%E6%96%87%E7%89%88%EF%BC%89/"/>
    <id>https://www.simon96.online/2018/10/18/Typora入门（中文版）/</id>
    <published>2018-10-18T11:31:41.000Z</published>
    <updated>2018-11-10T06:37:26.534Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>[TOC]</p><h2 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><ul><li>Typora删除了预览窗口，以及所有其他不必要的干扰。取而代之的是实时预览。</li><li>Markdown的语法因不同的解析器或编辑器而异，Typora使用的是<a href="https://help.github.com/articles/basic-writing-and-formatting-syntax/" target="_blank" rel="noopener">GitHub Flavored Markdown</a>。</li></ul><iframe height="360" width="640" src="https://www.typora.io/img/beta.mp4" frameborder="0" allowfullscreen><br></iframe><h3 id="块元素"><a href="#块元素" class="headerlink" title="块元素"></a>块元素</h3><h4 id="换行符"><a href="#换行符" class="headerlink" title="换行符"></a>换行符</h4><p>在markdown中，段落由多个空格分隔。在Typora中，只需回车即可创建新段落。</p><h4 id="标题级别"><a href="#标题级别" class="headerlink" title="标题级别"></a>标题级别</h4><blockquote><p># 一级标题， 快捷键为Crtl + 1<br>## 二级标题，快捷键为Crtl + 2<br>###### 六级标题，快捷键为Crtl + 6</p></blockquote><h4 id="引用文字"><a href="#引用文字" class="headerlink" title="引用文字"></a>引用文字</h4><blockquote><p>> + 空格 + 引用文字</p></blockquote><h4 id="清单"><a href="#清单" class="headerlink" title="清单"></a>清单</h4><p>输入 <em> 列表内容 将创建一个无序列表，该</em>符号可以替换为+或-。</p><p>输入1. 列表内容 将创建一个有序列表，其markdown源代码如下：</p><blockquote><p>无序列表<br>*   AA<br>*   BB<br>*   CC</p><p>有序列表</p><ol><li>AA</li><li>BB</li><li>CC</li></ol></blockquote><h4 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h4><blockquote><p>- [ ] 不勾选<br>- [x] 勾选</p></blockquote><h4 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h4><p>在Typora中输入””” + 回车，并在后面选择一个语言名称即可语法高亮。</p><blockquote><p>语法高亮:<br> \<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="function"><span class="keyword">def</span> <span class="title">helloWorld</span><span class="params">()</span>:</span></span><br><span class="line">&gt; ​<span class="keyword">print</span> <span class="string">'hello, world'</span></span><br><span class="line">&gt; \</span><br></pre></td></tr></table></figure></p></blockquote><h4 id="数学表达式"><a href="#数学表达式" class="headerlink" title="数学表达式"></a>数学表达式</h4><p>输入<code>$$</code>，然后按“回车”键，如下：<br>$$<br>\mathbf{V}_1 \times \mathbf{V}_2 =  \begin{vmatrix}<br>\mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \<br>\frac{\partial X}{\partial u} &amp;  \frac{\partial Y}{\partial u} &amp; 0 \<br>\frac{\partial X}{\partial v} &amp;  \frac{\partial Y}{\partial v} &amp; 0 \<br>\end{vmatrix}<br>$$</p><blockquote><p>\$$<br>\mathbf{V}_1 \times \mathbf{V}_2 =  \begin{vmatrix}<br>\mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \<br>\frac{\partial X}{\partial u} &amp;  \frac{\partial Y}{\partial u} &amp; 0 \<br>\frac{\partial X}{\partial v} &amp;  \frac{\partial Y}{\partial v} &amp; 0 \<br>\end{vmatrix}<br>\$$</p></blockquote><h4 id="表"><a href="#表" class="headerlink" title="表"></a>表</h4><p>输入`| 表头1 | 表头2 |`并回车。即可将创建一个包含两列的表，然后就像操作Word文档一样设置表格即可，没必要知道Markdown的复杂语法，因为这些语法会由Typora自动生成。效果如下：</p><table><thead><tr><th>First Header</th><th>Second Header</th></tr></thead><tbody><tr><td></td></tr></tbody></table><h4 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h4><blockquote><p>你可以创建一个脚注，像这样[^1].<br>[^1]: 这是上面的注释内容。</p></blockquote><p>你可以创建一个脚注，像这样<a href="这是上面的注释内容。">^1</a>.</p><p>注意：该例子脚注标识是1，脚注标识可以为字母数字下划线，但是暂不支持中文。脚注内容可为任意字符，包括中文。</p><h4 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h4><p>输入<code>***</code>或<code>---</code> 再按回车即可绘制一条水平线，如下：</p><hr><h4 id="YAML-Front-Matter"><a href="#YAML-Front-Matter" class="headerlink" title="YAML Front Matter"></a>YAML Front Matter</h4><p>Typora支持<a href="http://jekyllrb.com/docs/frontmatter/" target="_blank" rel="noopener">YAML Front Matter</a>， 在文章开头输入<code>---</code>，然后按回车即可。</p><h4 id="目录（TOC）"><a href="#目录（TOC）" class="headerlink" title="目录（TOC）"></a>目录（TOC）</h4><p>输入<code>[toc]</code>然后回车，即可创建一个“目录”。TOC从文档中提取所有标题，其内容将自动更新。</p><h3 id="跨度元素"><a href="#跨度元素" class="headerlink" title="跨度元素"></a>跨度元素</h3><p>跨度元素即图片，网址，视频等，在Typora中输入后，会立即载入并呈现。</p><h4 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h4><h5 id="内部链接"><a href="#内部链接" class="headerlink" title="内部链接"></a>内部链接</h5><blockquote><p>这是一个带有标题属性的[链接](<a href="http://example.com/" target="_blank" rel="noopener">http://example.com/</a> “标题”).<br>这是一个没有标题属性的[链接](<a href="http://example.net/)" target="_blank" rel="noopener">http://example.net/)</a>.</p></blockquote><p>效果如下：</p><p>这是一个带有标题属性的<a href="http://example.com/" title="标题" target="_blank" rel="noopener">链接</a>.<br>这是一个没有标题属性的<a href="http://example.net/" target="_blank" rel="noopener">链接</a>.</p><h5 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h5><blockquote><p>这是一个[参考链接]<a href="http://example.com/" title="标题" target="_blank" rel="noopener">id</a>。<br>[id]: <a href="http://example.com/" target="_blank" rel="noopener">http://example.com/</a>  “标题”</p></blockquote><p>这是一个<a href="http://example.com/" title="标题" target="_blank" rel="noopener">参考链接</a>。</p><h4 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h4><p>Typora允许用&lt;括号括起来&gt;, 把URL作为链接插入。输入\<a href="mailto:&#116;&#x64;&#95;&#x73;&#105;&#x6d;&#111;&#110;&#64;&#111;&#x75;&#116;&#108;&#x6f;&#111;&#x6b;&#46;&#x63;&#111;&#x6d;" target="_blank" rel="noopener">&#116;&#x64;&#95;&#x73;&#105;&#x6d;&#111;&#110;&#64;&#111;&#x75;&#116;&#108;&#x6f;&#111;&#x6b;&#46;&#x63;&#111;&#x6d;</a> 即 <a href="mailto:&#x74;&#x64;&#x5f;&#115;&#x69;&#x6d;&#111;&#x6e;&#64;&#x6f;&#117;&#x74;&#x6c;&#111;&#111;&#x6b;&#x2e;&#99;&#x6f;&#109;" target="_blank" rel="noopener">&#x74;&#x64;&#x5f;&#115;&#x69;&#x6d;&#111;&#x6e;&#64;&#x6f;&#117;&#x74;&#x6c;&#111;&#111;&#x6b;&#x2e;&#99;&#x6f;&#109;</a>。<br>Typora还会自动链接标准网址。例如：<a href="http://www.simon96.online。" target="_blank" rel="noopener">www.simon96.online。</a></p><h4 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h4><blockquote><p>![显示的文字](/path/to/img.jpg)<br>![显示的文字](/path/to/img.jpg “图片标题”)</p></blockquote><p><img src="/2018/10/18/Typora入门（中文版）/" alt="显示的文字"><br><img src="/2018/10/18/Typora入门（中文版）/&quot;图片标题&quot;" alt="显示的文字"></p><h4 id="倾斜"><a href="#倾斜" class="headerlink" title="倾斜"></a>倾斜</h4><blockquote><p>*单个星号*<br>_单下划线_</p></blockquote><p>效果如下：<br><em>单个星号</em></p><p><em>单下划线</em></p><h4 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h4><blockquote><p>*两个星号*<br>_双下划线_</p></blockquote><p>效果如下：<br><strong>两个星号</strong><br><strong>双下划线</strong></p><h4 id="代码标记"><a href="#代码标记" class="headerlink" title="代码标记"></a>代码标记</h4><p>标记代码使用反引号，即在英文输入法下，ESC键下面和1键左边的符号——` </p><p>使用该`printf()`功能。<br>效果如下：<br>使用该<code>printf()</code>功能。</p><h4 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h4><blockquote><p>~~删除线~~</p></blockquote><p>效果如下：</p><p> <del>删除线</del></p><h4 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h4><p>\<u>下划线</u></p><p>效果如下：</p><p><u>下划线</u></p><h4 id="表情符号-smile"><a href="#表情符号-smile" class="headerlink" title="表情符号:smile:"></a>表情符号:smile:</h4><blockquote><p>：smile ：​（注意为：是英文的冒号）</p></blockquote><p>:smile:</p><h4 id="下标"><a href="#下标" class="headerlink" title="下标"></a>下标</h4><p>H~2~O (需在设置中打开该功能)</p><h4 id="上标"><a href="#上标" class="headerlink" title="上标"></a>上标</h4><p>X^2^(需在设置中打开该功能)</p><h4 id="高亮"><a href="#高亮" class="headerlink" title="高亮"></a>高亮</h4><p> ==高亮==(需在设置中打开该功能)</p><h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><p>支持HTML</p><h4 id="嵌入内容"><a href="#嵌入内容" class="headerlink" title="嵌入内容"></a>嵌入内容</h4><p>支持iframe-based嵌入代码， </p><blockquote><p> &lt; iframe height=’265’ scrolling=’no’ title=’Fancy Animated SVG Menu’ src=’<a href="http://codepen.io/jeangontijo/embed/OxVywj/?height=265&amp;theme-id=0&amp;default-tab=css,result&amp;embed-version=2&#39;" target="_blank" rel="noopener">http://codepen.io/jeangontijo/embed/OxVywj/?height=265&amp;theme-id=0&amp;default-tab=css,result&amp;embed-version=2&#39;</a> frameborder=’no’ allowtransparency=’true’ allowfullscreen=’true’ style=’width: 100%;’&gt;</p></blockquote><h4 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h4><blockquote><p>&lt; video src=”xxx.mp4” /&gt;</p></blockquote><p>总结：</p><ol><li>建议打开大纲视图（快捷键ctrl + shift + 1）。</li><li>插入表格需要顶格写，不然显示不出来。</li><li>以上语法不用刻意记，在Typora中的右键菜单都有， 常用功能基本上都有快捷键。</li></ol><h2 id="感谢支持"><a href="#感谢支持" class="headerlink" title="感谢支持"></a>感谢支持</h2><table><thead><tr><th>昵称</th><th>支持方式</th><th>数目</th><th>备注信息</th></tr></thead><tbody><tr><td>null</td><td>微信</td><td>5</td><td>神器</td></tr><tr><td>MaydayPeanut</td><td>支付宝</td><td>0.66</td><td>真的6</td></tr><tr><td>追</td><td>支付宝</td><td>6</td><td>这波可以的</td></tr><tr><td>鎖謔訫</td><td>支付宝</td><td>1</td><td>null</td></tr></tbody></table><p>微信打赏看不到名字，但是还是很感谢，持续更新中。。。</p>]]></content>
    
    <summary type="html">
    
      写Markdown费事？Typora让你像写word一样行云流水，所见即所得。
    
    </summary>
    
      <category term="hexo" scheme="https://www.simon96.online/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://www.simon96.online/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>【持续更新】最全Hexo博客搭建+主题优化+插件配置+常用操作+错误分析</title>
    <link href="https://www.simon96.online/2018/10/12/hexo-tutorial/"/>
    <id>https://www.simon96.online/2018/10/12/hexo-tutorial/</id>
    <published>2018-10-12T06:04:31.000Z</published>
    <updated>2018-11-10T07:42:08.688Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><ol><li>欢迎在文末留言，或者点击加入<a href="https://dwz.cn/Fdk9LftN" target="_blank" rel="noopener">QQ群933583982</a>互相交流。</li><li>本文采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank" rel="noopener">CC BY-NC-SA 4.0</a> 许可协议，转载请注明出处！</li></ol><h3 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h3><h4 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h4><ol><li><p><a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a> 下载，并安装。详细步骤：<a href="https://www.simon96.online/2018/11/10/hexo-env/">https://www.simon96.online/2018/11/10/hexo-env/</a></p></li><li><p><a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a> 下载，并安装。详细步骤：<a href="https://www.simon96.online/2018/11/10/hexo-env/">https://www.simon96.online/2018/11/10/hexo-env/</a></p></li><li><p>安装Hexo，在命令行（即Git Bash）运行以下命令：</p><blockquote><p>npm install -g hexo-cli</p></blockquote></li><li><p>初始化Hexo，在命令行（即Git Bash）依次运行以下命令即可：</p><p>以下<folder>，即存放Hexo初始化文件的路径， 即站点目录。</folder></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo init &lt;folder&gt;</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> &lt;folder&gt;</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install</span></span><br></pre></td></tr></table></figure><p>新建完成后，在<folder>路径下，会产生这些文件和文件夹：</folder></p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── <span class="variable">_config</span>.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── <span class="variable">_drafts</span></span><br><span class="line">|   └── <span class="variable">_posts</span></span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><p><strong>注</strong>：</p><ul><li><p>hexo相关命令均在<strong>站点目录</strong>下，用<strong>Git Bash</strong>运行。</p></li><li><p>站点配置文件：站点目录下的<code>_config.yml</code>。</p><p>​            路径为<code>&lt;folder&gt;\_config.yml</code></p></li><li><p>主题配置文件：站点目录下的<code>themes</code>文件夹下的，主题文件夹下的<code>_config.yml</code>。</p><p>​            路径为<code>&lt;folder&gt;\themes\&lt;主题文件夹&gt;\_config.yml</code></p></li></ul></li><li><p>启动服务器。在<folder>路径下，命令行（即Git Bash）输入以下命令，运行即可：</folder></p><blockquote><p>hexo server</p></blockquote></li><li><p>浏览器访问网址： <code>http://localhost:4000/</code></p></li></ol><p>至此，您的Hexo博客已经搭建在本地。</p><h4 id="实施方案"><a href="#实施方案" class="headerlink" title="实施方案"></a>实施方案</h4><h5 id="方案一：GithubPages"><a href="#方案一：GithubPages" class="headerlink" title="方案一：GithubPages"></a>方案一：GithubPages</h5><ol><li><p>创建<a href="https://github.com" target="_blank" rel="noopener">Github</a>账号 </p></li><li><p>创建仓库， 仓库名为：&lt;Github账号名称&gt;.github.io</p></li><li><p>将本地Hexo博客推送到GithubPages</p><p>3.1. 安装<code>hexo-deployer-git</code>插件。在命令行（即Git Bash）运行以下命令即可：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-deployer-git --save</span></span><br></pre></td></tr></table></figure><p>3.2. 添加SSH key。</p><ul><li><p>创建一个 SSH key 。在命令行（即Git Bash）输入以下命令， 回车三下即可：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh-keygen -t rsa -C <span class="string">"邮箱地址"</span></span></span><br></pre></td></tr></table></figure></li><li><p>添加到 github。 复制密钥文件内容（路径形如<code>C:\Users\Administrator\.ssh\id_rsa.pub</code>），粘贴到<a href="https://github.com/settings/keys" target="_blank" rel="noopener">New SSH Key</a>即可。</p></li><li><p>测试是否添加成功。在命令行（即Git Bash）依次输入以下命令，返回“You’ve successfully authenticated”即成功：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh -T git@github.com</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yes</span></span><br></pre></td></tr></table></figure></li></ul><p>3.3. 修改<code>_config.yml</code>（在站点目录下）。文件末尾修改为：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Deployment</span></span><br><span class="line"><span class="meta">## Docs: https:<span class="comment">//hexo.io/docs/deployment.html</span></span></span><br><span class="line"><span class="symbol">deploy:</span></span><br><span class="line"><span class="symbol">  type:</span> git</span><br><span class="line"><span class="symbol">  repo:</span> git@github.com:<span class="params">&lt;Github账号名称&gt;</span>/<span class="params">&lt;Github账号名称&gt;</span>.github.io.git</span><br><span class="line"><span class="symbol">  branch:</span> master</span><br></pre></td></tr></table></figure><p>注意：上面仓库地址写ssh地址，不写http地址。</p><p>3.4. 推送到GithubPages。在命令行（即Git Bash）依次输入以下命令， 返回<code>INFO  Deploy done: git</code>即成功推送：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo g</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo d</span></span><br></pre></td></tr></table></figure></li><li><p>等待1分钟左右，浏览器访问网址： <code>https://&lt;Github账号名称&gt;.github.io</code></p></li></ol><p>至此，您的Hexo博客已经搭建在GithubPages, 域名为<code>https://&lt;Github账号名称&gt;.github.io</code>。</p><h5 id="方案二：GithubPages-域名"><a href="#方案二：GithubPages-域名" class="headerlink" title="方案二：GithubPages + 域名"></a>方案二：GithubPages + 域名</h5><p>在方案一的基础上，添加自定义域名（您购买的域名）。</p><ol><li><p>域名解析。</p><p>类型选择为 CNAME；</p><p>主机记录即域名前缀，填写为www；</p><p>记录值填写为自定义域名；</p><p>解析线路，TTL 默认即可。</p></li><li><p>仓库设置。</p><p>2.1. 打开博客仓库设置：<code>https://github.com/&lt;Github账号名称&gt;/&lt;Github账号名称&gt;.github.io/settings</code></p><p>2.2. 在Custom domain下，填写自定义域名，点击<code>save</code>。</p><p>2.3. 在站点目录的<code>source</code>文件夹下，创建并打开<code>CNAME.txt</code>，写入你的域名（如<code>www.simon96.online</code>），保存，并重命名为<code>CNAME</code>。</p></li><li><p>等待10分钟左右。</p><p>浏览器访问自定义域名。</p><p>至此，您的Hexo博客已经解析到自定义域名，<code>https://&lt;Github账号名称&gt;.github.io</code>依然可用。</p></li></ol><h5 id="方案三：GithubPages-CodingPages-域名"><a href="#方案三：GithubPages-CodingPages-域名" class="headerlink" title="方案三：GithubPages + CodingPages + 域名"></a>方案三：GithubPages + CodingPages + 域名</h5><p>GithubPages 在国内较慢，百度不收录，而CodingPages 在国外较快。所以在方案二的基础上，添加CodingPages 。</p><ol><li><p>创建<a href="https://coding.net/" target="_blank" rel="noopener">Coding</a>账号 </p></li><li><p>创建仓库， 仓库名为：&lt;Coding账号名称&gt;</p></li><li><p>进入项目里『代码』页面，点击『一键开启静态 Pages』，稍等片刻CodingPages即可部署成功。</p></li><li><p>将本地Hexo博客推送到CodingPages</p><p>4.1. 鉴于创建GithubPages 时，已经生成过公钥。可直接复制密钥文件内容（路径形如<code>C:\Users\Administrator\.ssh\id_rsa.pub</code>）， 粘贴到<a href="https://dev.tencent.com/user/account/setting/keys" target="_blank" rel="noopener">新增公钥</a>。</p><p>4.2. 测试是否添加成功。在命令行（即Git Bash）依次输入以下命令，返回“You’ve successfully authenticated”即成功：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh -T git@git.coding.net</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yes</span></span><br></pre></td></tr></table></figure><p>4.3. 修改<code>_config.yml</code>（在存放Hexo初始化文件的路径下）。文件末尾修改为：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Deployment</span></span><br><span class="line"><span class="meta">## Docs: https:<span class="comment">//hexo.io/docs/deployment.html</span></span></span><br><span class="line"><span class="symbol">deploy:</span></span><br><span class="line">- type: git</span><br><span class="line"><span class="symbol">  repo:</span> git@github.com:<span class="params">&lt;Github账号名称&gt;</span>/<span class="params">&lt;Github账号名称&gt;</span>.github.io.git</span><br><span class="line"><span class="symbol">  branch:</span> master</span><br><span class="line">- type: git</span><br><span class="line"><span class="symbol">  repo:</span> git@git.dev.tencent.com:<span class="params">&lt;Coding账号名称&gt;</span>/<span class="params">&lt;Coding账号名称&gt;</span>.git</span><br><span class="line"><span class="symbol">  branch:</span> master</span><br></pre></td></tr></table></figure><p>4.4. 推送到GithubPages。在命令行（即Git Bash）依次输入以下命令， 返回<code>INFO  Deploy done: git</code>即成功推送：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo g</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo d</span></span><br></pre></td></tr></table></figure></li><li><p>域名解析</p><ol><li><p>添加 CNAME 记录指向 &lt;Coding账号名称&gt;.coding.me</p><p>类型选择为 CNAME；</p><p>主机记录即域名前缀，填写为www；</p><p>记录值填写为自定义域名；</p><p>解析线路，TTL 默认即可。</p></li><li><p>添加 两条A 记录指向 192.30.252.153和192.30.252.154</p><p>类型选择为 A；</p><p>主机记录即域名前缀，填写为@；</p><p>记录值填写为192.30.252.153和192.30.252.154；</p><p>解析线路，境外或谷歌。</p></li><li><p>在『Pages 服务』设置页（<code>https://dev.tencent.com/u/&lt;Coding账号名称&gt;/p/&lt;Coding账号名称&gt;/git/pages/settings</code>）中绑定自定义域名。</p></li></ol></li></ol><p>至此，您的Hexo博客已经解析到自定义域名，<code>https://&lt;Github账号名称&gt;.github.io</code>和<code>https://&lt;Coding账号名称&gt;.coding.me</code>依然可用。</p><h5 id="方案四：云服务器-域名"><a href="#方案四：云服务器-域名" class="headerlink" title="方案四：云服务器 + 域名"></a>方案四：云服务器 + 域名</h5><p>该方案需要先购买云服务器和域名。</p><ol><li><p>在云服务器安装Git 和 Nginx。(Git 用于版本管理和部署，Nginx 用于静态博客托管。)</p><p>登陆root用户，运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> yum -y update</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum install -y git nginx</span></span><br></pre></td></tr></table></figure></li><li><p>Nginx配置</p><p>2.1. 创建文件目录(用于博客站点文件存放)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/</span><br><span class="line">mkdir hexo</span><br><span class="line">chmod 775 -R /usr/<span class="built_in">local</span>/hexo/</span><br></pre></td></tr></table></figure><p>2.2. 添加 index.html(用于检测配置 Nginx 是否成功)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/<span class="built_in">local</span>/hexo/index.html</span><br></pre></td></tr></table></figure><p>添加以下代码，并保存。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Nginx running<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.3. 配置 Nginx 服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><p>修改server_name和root：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">      <span class="attribute">listen</span>       <span class="number">80</span> default_server;</span><br><span class="line">      <span class="attribute">listen</span>       [::]:<span class="number">80</span> default_server;</span><br><span class="line">      <span class="attribute">server_name</span>  www.baidu.com; <span class="comment"># 填个人域名      </span></span><br><span class="line">      <span class="attribute">root</span>         /usr/local/hexo/;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>2.4. 启动nginx服务；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service nginx start</span><br></pre></td></tr></table></figure><p>2.5. 云服务器浏览器访问个人域名或IP，若跳转index.html，则配置完成，否则检查以上配置。</p></li><li><p>git配置</p><p>3.1. 创建文件目录, 用于私人 Git 仓库搭建, 并更改目录读写权限。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/</span><br><span class="line">mkdir hexoRepo</span><br><span class="line">chmod 775 -R /usr/<span class="built_in">local</span>/hexoRepo/</span><br></pre></td></tr></table></figure><p>3.2. Git 初始化裸库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> hexoRepo/</span><br><span class="line">git init --bare hexo.git</span><br></pre></td></tr></table></figure><p>3.3. 创建 Git 钩子(hook)。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/<span class="built_in">local</span>/hexoRepo/hexo.git/hooks/post-receive</span><br></pre></td></tr></table></figure><p>3.4. 输入以下信息，用于指定 Git 的源代码 和 Git 配置文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">git --work-tree=/usr/<span class="built_in">local</span>/hexo --git-dir=/usr/<span class="built_in">local</span>/hexoRepo/hexo.git checkout -f</span><br></pre></td></tr></table></figure><p>3.5. 保存并退出后, 给该文件添加可执行权限。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /usr/<span class="built_in">local</span>/hexoRepo/hexo.git/hooks/post-receive</span><br></pre></td></tr></table></figure></li><li><p>本地博客推送到云服务器</p><p>4.1. 安装<code>hexo-deployer-git</code>插件。在命令行（即Git Bash）运行以下命令即可：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-deployer-git --save</span></span><br></pre></td></tr></table></figure><p>4.2. 添加SSH key。</p><ul><li><p>创建一个 SSH key 。在命令行（即Git Bash）输入以下命令， 回车三下即可：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh-keygen -t rsa -C <span class="string">"邮箱地址"</span></span></span><br></pre></td></tr></table></figure></li><li><p>添加到 github。 复制密钥文件内容（路径形如<code>C:\Users\Administrator\.ssh\id_rsa.pub</code>），粘贴到<a href="https://github.com/settings/keys" target="_blank" rel="noopener">New SSH Key</a>即可。</p></li><li><p>测试是否添加成功。在命令行（即Git Bash）依次输入以下命令，返回“You’ve successfully authenticated”即成功：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh -T git@github.com</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yes</span></span><br></pre></td></tr></table></figure></li></ul><p>4.3. 修改<code>_config.yml</code>（在站点目录下）。文件末尾修改为：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Deployment</span></span><br><span class="line"><span class="meta">## Docs: https:<span class="comment">//hexo.io/docs/deployment.html</span></span></span><br><span class="line"><span class="symbol">deploy:</span></span><br><span class="line"><span class="symbol">  type:</span> git</span><br><span class="line"><span class="symbol">  repo:</span> root@xxx.xxx.xxx.xxx:<span class="meta-keyword">/usr/</span>local/hexoRepo/hexo  <span class="comment">//用户名@域名或 IP 地址:/usr/local/hexoRepo/hexo</span></span><br><span class="line"><span class="symbol">  branch:</span> master</span><br></pre></td></tr></table></figure><p>注意：上面仓库地址写ssh地址，不写http地址。</p><p>4.4. 推送到GithubPages。在命令行（即Git Bash）依次输入以下命令， 返回<code>INFO  Deploy done: git</code>即成功推送：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo g</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo d</span></span><br></pre></td></tr></table></figure></li><li><p>等待1分钟左右，浏览器访问个人域名。</p><p>至此，您的Hexo博客已经搭建在云服务器, 域名为个人域名。</p></li></ol><h3 id="主题优化"><a href="#主题优化" class="headerlink" title="主题优化"></a>主题优化</h3><h4 id="选择主题"><a href="#选择主题" class="headerlink" title="选择主题"></a>选择主题</h4><p>Hexo默认的主题是landscape，推荐以下主题：</p><ol><li><a href="https://github.com/shenliyang/hexo-theme-snippet#hexo-theme-snippet" target="_blank" rel="noopener">snippet</a></li><li><a href="https://github.com/iTimeTraveler/hexo-theme-hiero#hiero" target="_blank" rel="noopener">Hiero</a></li><li><a href="https://github.com/tangkunyin/hexo-theme-jsimple#jsimple" target="_blank" rel="noopener">JSimple</a></li><li><a href="https://github.com/chaooo/hexo-theme-BlueLake#bluelake" target="_blank" rel="noopener">BlueLake</a></li></ol><h4 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h4><ol><li>下载主题</li><li>将下载好的主题文件夹，粘贴到站点目录的<code>themes</code>下。</li><li>更改站点配置文件<code>_config.yml</code> 的theme字段，为主题文件夹的名称：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Extensions</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Plugins: https://hexo.io/plugins/</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Themes: https://hexo.io/themes/</span></span></span><br><span class="line">theme: &lt;主题文件夹的名称&gt;</span><br></pre></td></tr></table></figure><h4 id="主题优化-1"><a href="#主题优化-1" class="headerlink" title="主题优化"></a>主题优化</h4><p>以上主题都有比较详细的说明文档，本节主要解决主题优化的常见问题。</p><p>主题优化一般包括：</p><ul><li><p><strong>设置「RSS」</strong></p></li><li><p><strong>添加「标签」页面</strong></p></li><li><p><strong>添加「分类」页面</strong></p></li><li><p><strong>设置「字体」</strong></p><p>问题：引用国外字体镜像较慢。</p><p>解决：可以改用国内的。将\themes\*\layout_partials\head external-fonts.swig文件中fonts.google.com改成fonts.lug.ustc.edu.cn。</p></li><li><p><strong>设置「代码高亮主题」</strong></p></li><li><p><strong>侧边栏社交链接</strong></p><p>问题：图标哪里找？</p><p>解决：<a href="https://fontawesome.com/icons?d=gallery" target="_blank" rel="noopener">Font Awesome</a></p></li><li><p><strong>开启打赏功能</strong></p><p>问题：微信支付宝二维码不美观，规格不一。</p><p>解决：<a href="https://cli.im/weixin" target="_blank" rel="noopener">在线生成二维码</a></p></li><li><p><strong>设置友情链接</strong></p></li><li><p><strong>腾讯公益404页面</strong></p></li><li><p><strong>站点建立时间</strong></p></li><li><p><strong>订阅微信公众号</strong></p></li><li><p><strong>设置「动画效果」</strong></p><p>问题：慢，需要等待 JavaScript 脚本完全加载完毕后才会显示内容。<br>解决：将主题配置文件<code>_config.yml</code>中，use_motion字段的值设为 <code>false</code> 来关闭动画。</p></li><li><p><strong>设置「背景动画」</strong></p></li></ul><p>主题优化还包括：</p><h5 id="添加背景图"><a href="#添加背景图" class="headerlink" title="添加背景图"></a>添加背景图</h5><p>在 themes/*/source/css/_custom/custom.styl 中添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">body&#123;</span><br><span class="line">    background:url(/images/bg.jpg);</span><br><span class="line">    background-size:cover;</span><br><span class="line">    background-repeat:no-repeat;</span><br><span class="line">    background-attachment:fixed;</span><br><span class="line">    background-position:center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="修改Logo字体"><a href="#修改Logo字体" class="headerlink" title="修改Logo字体"></a>修改Logo字体</h5><p>在 <code>themes/*/source/css/_custom/custom.styl</code> 中添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@font-face &#123;</span><br><span class="line">    font-family: Zitiming;</span><br><span class="line">    src: url(&apos;/fonts/Zitiming.ttf&apos;);</span><br><span class="line">&#125;</span><br><span class="line">.site-title &#123;</span><br><span class="line">    font-size: 40px !important;</span><br><span class="line">font-family: &apos;Zitiming&apos; !important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中字体文件在 <code>themes/next/source/fonts</code> 目录下，里面有个 <code>.gitkeep</code> 的隐藏文件，打开写入你要保留的字体文件，比如我的是就是写入 <code>Zitiming.ttf</code> ，具体字库自己从网上下载即可。</p><h5 id="修改内容区域的宽度"><a href="#修改内容区域的宽度" class="headerlink" title="修改内容区域的宽度"></a>修改内容区域的宽度</h5><p>编辑主题的 <code>source/css/_variables/custom.styl</code> 文件，新增变量：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 修改成你期望的宽度</span><br><span class="line">$content-desktop = 700px</span><br><span class="line"></span><br><span class="line">// 当视窗超过 1600px 后的宽度</span><br><span class="line">$content-desktop-large = 900px</span><br></pre></td></tr></table></figure><h5 id="网站标题栏背景颜色"><a href="#网站标题栏背景颜色" class="headerlink" title="网站标题栏背景颜色"></a>网站标题栏背景颜色</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.site-meta &#123;</span><br><span class="line">  background: $blue; //修改为自己喜欢的颜色</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="自定义鼠标样式"><a href="#自定义鼠标样式" class="headerlink" title="自定义鼠标样式"></a>自定义鼠标样式</h5><p>打开 <code>themes/*/source/css/_custom/custom.styl</code> ,在里面写下如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 鼠标样式</span><br><span class="line">  * &#123;</span><br><span class="line">      cursor: url(&quot;http://om8u46rmb.bkt.clouddn.com/sword2.ico&quot;),auto!important</span><br><span class="line">  &#125;</span><br><span class="line">  :active &#123;</span><br><span class="line">      cursor: url(&quot;http://om8u46rmb.bkt.clouddn.com/sword1.ico&quot;),auto!important</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h5 id="文章加密访问"><a href="#文章加密访问" class="headerlink" title="文章加密访问"></a>文章加密访问</h5><p>打开 <code>themes/*/layout/_partials/head.swig</code>文件,在 <code></code> 之前插入代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    (function()&#123;</span><br><span class="line">        if(&apos;&#123;&#123; page.password &#125;&#125;&apos;)&#123;</span><br><span class="line">            if (prompt(&apos;请输入密码&apos;) !== &apos;&#123;&#123; page.password &#125;&#125;&apos;)&#123;</span><br><span class="line">                alert(&apos;密码错误&apos;);</span><br><span class="line">                history.back();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>写文章时加上<code>password: *</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 2018</span><br><span class="line">date: 2018-10-25 16:10:03</span><br><span class="line">password: 123456</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h5 id="实现点击出现桃心效果"><a href="#实现点击出现桃心效果" class="headerlink" title="实现点击出现桃心效果"></a>实现点击出现桃心效果</h5><ol><li>在<code>/themes/*/source/js/src</code>下新建文件<code>click.js</code>，接着把以下粘贴到<code>click.js</code>文件中。<br>代码如下：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e,t,a</span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>&#123;c(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>),o(),r()&#125;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class="number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="number">1</span>)):(d[e].y--,d[e].scale+=<span class="number">.004</span>,d[e].alpha-=<span class="number">.013</span>,d[e].el.style.cssText=<span class="string">"left:"</span>+d[e].x+<span class="string">"px;top:"</span>+d[e].y+<span class="string">"px;opacity:"</span>+d[e].alpha+<span class="string">";transform:scale("</span>+d[e].scale+<span class="string">","</span>+d[e].scale+<span class="string">") rotate(45deg);background:"</span>+d[e].color+<span class="string">";z-index:99999"</span>);requestAnimationFrame(r)&#125;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="string">"function"</span>==<span class="keyword">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"div"</span>);a.className=<span class="string">"heart"</span>,d.push(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.clientX<span class="number">-5</span>,<span class="attr">y</span>:e.clientY<span class="number">-5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"style"</span>);a.type=<span class="string">"text/css"</span>;<span class="keyword">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class="keyword">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">"rgb("</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">")"</span>&#125;<span class="keyword">var</span> d=[];e.requestAnimationFrame=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;setTimeout(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),n()&#125;(<span class="built_in">window</span>,<span class="built_in">document</span>);</span><br></pre></td></tr></table></figure><ol><li>在<code>\themes\*\layout\_layout.swig</code>文件末尾添加：</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 页面点击小红心 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/src/clicklove.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="静态资源压缩"><a href="#静态资源压缩" class="headerlink" title="静态资源压缩"></a>静态资源压缩</h5><p>在站点目录下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install gulp -g</span><br></pre></td></tr></table></figure><p>安装gulp插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp-minify-css --save</span><br><span class="line">npm install gulp-uglify --save</span><br><span class="line">npm install gulp-htmlmin --save</span><br><span class="line">npm install gulp-htmlclean --save</span><br><span class="line">npm install gulp-imagemin --save</span><br></pre></td></tr></table></figure><p>在 <code>Hexo</code> 站点下新建 <code>gulpfile.js</code>文件，文件内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">var gulp = require(&apos;gulp&apos;);</span><br><span class="line">var minifycss = require(&apos;gulp-minify-css&apos;);</span><br><span class="line">var uglify = require(&apos;gulp-uglify&apos;);</span><br><span class="line">var htmlmin = require(&apos;gulp-htmlmin&apos;);</span><br><span class="line">var htmlclean = require(&apos;gulp-htmlclean&apos;);</span><br><span class="line">var imagemin = require(&apos;gulp-imagemin&apos;);</span><br><span class="line">// 压缩css文件</span><br><span class="line">gulp.task(&apos;minify-css&apos;, function() &#123;</span><br><span class="line">  return gulp.src(&apos;./public/**/*.css&apos;)</span><br><span class="line">  .pipe(minifycss())</span><br><span class="line">  .pipe(gulp.dest(&apos;./public&apos;));</span><br><span class="line">&#125;);</span><br><span class="line">// 压缩html文件</span><br><span class="line">gulp.task(&apos;minify-html&apos;, function() &#123;</span><br><span class="line">  return gulp.src(&apos;./public/**/*.html&apos;)</span><br><span class="line">  .pipe(htmlclean())</span><br><span class="line">  .pipe(htmlmin(&#123;</span><br><span class="line">    removeComments: true,</span><br><span class="line">    minifyJS: true,</span><br><span class="line">    minifyCSS: true,</span><br><span class="line">    minifyURLs: true,</span><br><span class="line">  &#125;))</span><br><span class="line">  .pipe(gulp.dest(&apos;./public&apos;))</span><br><span class="line">&#125;);</span><br><span class="line">// 压缩js文件</span><br><span class="line">gulp.task(&apos;minify-js&apos;, function() &#123;</span><br><span class="line">    return gulp.src([&apos;./public/**/.js&apos;,&apos;!./public/js/**/*min.js&apos;])</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(&apos;./public&apos;));</span><br><span class="line">&#125;);</span><br><span class="line">// 压缩 public/demo 目录内图片</span><br><span class="line">gulp.task(&apos;minify-images&apos;, function() &#123;</span><br><span class="line">    gulp.src(&apos;./public/demo/**/*.*&apos;)</span><br><span class="line">        .pipe(imagemin(&#123;</span><br><span class="line">           optimizationLevel: 5, //类型：Number  默认：3  取值范围：0-7（优化等级）</span><br><span class="line">           progressive: true, //类型：Boolean 默认：false 无损压缩jpg图片</span><br><span class="line">           interlaced: false, //类型：Boolean 默认：false 隔行扫描gif进行渲染</span><br><span class="line">           multipass: false, //类型：Boolean 默认：false 多次优化svg直到完全优化</span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(&apos;./public/uploads&apos;));</span><br><span class="line">&#125;);</span><br><span class="line">// 默认任务</span><br><span class="line">gulp.task(&apos;default&apos;, [</span><br><span class="line">  &apos;minify-html&apos;,&apos;minify-css&apos;,&apos;minify-js&apos;,&apos;minify-images&apos;</span><br><span class="line">]);</span><br></pre></td></tr></table></figure><p>只需要每次在执行 <code>generate</code> 命令后执行 <code>gulp</code> 就可以实现对静态资源的压缩，压缩完成后执行 <code>deploy</code> 命令同步到服务器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">gulp</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><h5 id="修改访问URL路径"><a href="#修改访问URL路径" class="headerlink" title="修改访问URL路径"></a>修改访问URL路径</h5><p>默认情况下访问URL路径为：<code>domain/2018/10/18/关于本站</code>,修改为 <code>domain/About/关于本站</code>。 编辑 <code>Hexo</code> 站点下的 <code>_config.yml</code> 文件，修改其中的 <code>permalink</code>字段：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">permalink: :category/:title/</span><br></pre></td></tr></table></figure><h5 id="博文置顶"><a href="#博文置顶" class="headerlink" title="博文置顶"></a>博文置顶</h5><ol><li><p>安装插件</p><p>$ npm uninstall hexo-generator-index –save<br>$ npm install hexo-generator-index-pin-top –save</p></li></ol><p>然后在需要置顶的文章的Front-matter中加上top即可：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="number">2018</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018</span><span class="bullet">-10</span><span class="bullet">-25</span> <span class="number">16</span><span class="string">:10:03</span></span><br><span class="line"><span class="attr">top:</span> <span class="number">10</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><ol><li>设置置顶标志</li></ol><p>打开：/themes/*/layout/_macro/post.swig，定位到<div class="post-meta">，插入以下代码即可：</div></p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> post.top %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-thumb-tack"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">7D26CD</span>&gt;</span>置顶<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-divider"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><h5 id="在右上角或者左上角实现fork-me-on-github"><a href="#在右上角或者左上角实现fork-me-on-github" class="headerlink" title="在右上角或者左上角实现fork me on github"></a>在右上角或者左上角实现fork me on github</h5><ol><li>选择样式<a href="https://blog.github.com/2008-12-19-github-ribbons/" target="_blank" rel="noopener">GitHub Ribbons</a>,</li><li>修改图片跳转链接,将<code>&lt;a href=&quot;https://github.com/you&quot;&gt;</code>中的链接换为自己Github链接： </li><li>打开 <code>themes/next/layout/_layout.swig</code> 文件，把代码复制到<code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code>下面。</li></ol><h5 id="主页文章添加边框阴影效果"><a href="#主页文章添加边框阴影效果" class="headerlink" title="主页文章添加边框阴影效果"></a>主页文章添加边框阴影效果</h5><p>打开 <code>themes/*/source/css/_custom/custom.styl</code> ,向里面加代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 主页文章添加阴影效果</span><br><span class="line">.post &#123;</span><br><span class="line">   margin-top: 0px;</span><br><span class="line">   margin-bottom: 60px;</span><br><span class="line">   padding: 25px;</span><br><span class="line">   -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);</span><br><span class="line">   -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="显示当前浏览进度"><a href="#显示当前浏览进度" class="headerlink" title="显示当前浏览进度"></a>显示当前浏览进度</h5><p>修改<code>themes/*/_config.yml</code>，把 <code>false</code> 改为 <code>true</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Back to top in sidebar</span><br><span class="line">b2t: true</span><br><span class="line"></span><br><span class="line"># Scroll percent label in b2t button</span><br><span class="line">scrollpercent: true</span><br></pre></td></tr></table></figure><h5 id="创建分类页"><a href="#创建分类页" class="headerlink" title="创建分类页"></a>创建分类页</h5><p>在终端窗口下，定位到 <code>Hexo</code> 站点目录下，新建：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd &lt;站点目录&gt;</span><br><span class="line">$ hexo new page categories</span><br></pre></td></tr></table></figure><h5 id="加入-广告"><a href="#加入-广告" class="headerlink" title="加入 广告"></a>加入 广告</h5><p>主要有两种：<a href="https://ssp.baidu.com/static/register.html" target="_blank" rel="noopener">百度SSP</a>和<a href="https://www.google.com/adsense/start/#/?modal_active=none" target="_blank" rel="noopener">谷歌Adsense</a>。方法类似：</p><ol><li><p>注册，复制广告代码</p></li><li><p>部署到网站。</p><p>2.1. 新建 <code>theme/*/layout/_custom/google_ad.swig</code>，将 AdSense 上的代码粘贴进去</p><p>2.2. 头部。在 <code>theme/*/layout/_custom/head.swig</code> 中也粘贴一份</p><p>2.3. 每篇博客。在 <code>theme/*/layout/post.swig</code> 里中在希望看到的地方加上：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">include</span></span> '_custom/google_ad.swig' %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><p>例如：在 <code>&lt;div id=&quot;posts&quot; class=&quot;posts-expand&quot;&gt; &lt;/div&gt;</code> 中间插入，总代码如下：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> content %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"posts"</span> <span class="attr">class</span>=<span class="string">"posts-expand"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="template-variable">&#123;&#123; post_template.render(page) &#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">include</span></span> '_custom/google_ad.swig' %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></li><li><p>等待审核通过。如果失败，可再次申请。</p></li></ol><h5 id="添加萌萌哒"><a href="#添加萌萌哒" class="headerlink" title="添加萌萌哒"></a>添加萌萌哒</h5><ol><li><p>安装插件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> <span class="comment">--save hexo-helper-live2d</span></span><br></pre></td></tr></table></figure></li><li><p>复制你喜欢的模型名字：</p><p>Epsilon2.1</p><p><img src="https://huaji8.top/img/live2d/Epsilon2.1.gif" alt="img"></p><p>Gantzert_Felixander</p><p><img src="https://huaji8.top/img/live2d/Gantzert_Felixander.gif" alt="img"></p><p>haru</p><p><img src="https://huaji8.top/img/live2d/haru.gif" alt="img"></p><p>miku</p><p><img src="https://huaji8.top/img/live2d/miku.gif" alt="img"></p><p>ni-j</p><p><img src="https://huaji8.top/img/live2d/ni-j.gif" alt="img"></p><p>nico</p><p><img src="https://huaji8.top/img/live2d/nico.gif" alt="img"></p><p>nietzche</p><p><img src="https://huaji8.top/img/live2d/nietzche.gif" alt="img"></p><p>nipsilon</p><p><img src="https://huaji8.top/img/live2d/nipsilon.gif" alt="img"></p><p>nito</p><p><img src="https://huaji8.top/img/live2d/nito.gif" alt="img"></p><p>shizuku</p><p><img src="https://huaji8.top/img/live2d/shizuku.gif" alt="img"></p><p>tsumiki</p><p><img src="https://huaji8.top/img/live2d/tsumiki.gif" alt="img"></p><p>wanko</p><p><img src="https://huaji8.top/img/live2d/wanko.gif" alt="img"></p><p>z16</p><p><img src="https://huaji8.top/img/live2d/z16.gif" alt="img"></p><p>hibiki</p><p><img src="https://huaji8.top/img/live2d/hibiki.gif" alt="img"></p><p>koharu</p><p><img src="https://huaji8.top/img/live2d/koharu.gif" alt="img"></p><p>haruto</p><p><img src="https://huaji8.top/img/live2d/haruto.gif" alt="img"></p><p>Unitychan</p><p><img src="https://huaji8.top/img/live2d/Unitychan.gif" alt="img"></p><p>tororo</p><p><img src="https://huaji8.top/img/live2d/tororo.gif" alt="img"></p><p>hijiki</p><p><img src="https://huaji8.top/img/live2d/hijiki.gif" alt="img"></p></li><li><p>将以下代码添加到主题配置文件<code>_config.yml</code>，修改&lt;你喜欢的模型名字&gt;：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  scriptFrom:</span> <span class="string">local</span></span><br><span class="line"><span class="attr">  pluginRootPath:</span> <span class="string">live2dw/</span></span><br><span class="line"><span class="attr">  pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line"><span class="attr">  pluginModelPath:</span> <span class="string">assets/</span></span><br><span class="line"><span class="attr">  tagMode:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  log:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  model:</span></span><br><span class="line"><span class="attr">    use:</span> <span class="string">live2d-widget-model-&lt;你喜欢的模型名字&gt;</span></span><br><span class="line"><span class="attr">  display:</span></span><br><span class="line"><span class="attr">    position:</span> <span class="string">right</span></span><br><span class="line"><span class="attr">    width:</span> <span class="number">150</span></span><br><span class="line"><span class="attr">    height:</span> <span class="number">300</span></span><br><span class="line"><span class="attr">  mobile:</span></span><br><span class="line"><span class="attr">    show:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p>建配置文件</p><p>4.1. 在站点目录下建文件夹<code>live2d_models</code>，</p><p>4.2. 再在<code>live2d_models</code>下建文件夹<code>&lt;你喜欢的模型名字&gt;</code>,</p><p>4.3. 再在<code>&lt;你喜欢的模型名字&gt;</code>下建json文件：&lt;你喜欢的模型名字&gt;.model.json</p></li><li><p>安装模型。在命令行（即Git Bash）运行以下命令即可：</p><blockquote><p>npm install –save live2d-widget-model-&lt;你喜欢的模型名字&gt;</p></blockquote></li><li><p>在命令行（即Git Bash）运行以下命令， 在<code>http://127.0.0.1:4000/</code>查看测试结果:</p><blockquote><p>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</p></blockquote></li></ol><h3 id="插件配置"><a href="#插件配置" class="headerlink" title="插件配置"></a>插件配置</h3><p>以下插件（评论系统、数据统计与分析、内容分享服务、搜索服务）各选一个即可。</p><h4 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h4><table><thead><tr><th></th><th>推荐指数</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td><a href="https://valine.js.org/" target="_blank" rel="noopener">Valine</a></td><td>4</td><td>每天30000条评论，10GB的储存</td><td>作者评论无标识</td></tr><tr><td><a href="https://livere.com/" target="_blank" rel="noopener">来必力/livere</a></td><td>4</td><td>多种账号登录</td><td>评论无法导出</td></tr><tr><td><a href="http://changyan.kuaizhan.com/" target="_blank" rel="noopener">畅言</a></td><td>3</td><td>美观</td><td>必须备案域名</td></tr><tr><td><a href="https://github.com/imsun/gitment" target="_blank" rel="noopener">gitment</a></td><td>3</td><td>简洁</td><td>只能登陆github评论</td></tr><tr><td>Disqus</td><td>1</td><td></td><td>需要翻*墙</td></tr></tbody></table><h5 id="Valine"><a href="#Valine" class="headerlink" title="Valine"></a>Valine</h5><p>1.1. 获取APP ID 和 APP Key</p><p>请先登录或注册 <a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a>, 进入控制台后点击左下角创建应用，</p><p>进入刚刚创建的应用，选择左下角的<code>设置</code>&gt;<code>应用Key</code>，然后就能看到你的<code>APP ID</code>和<code>APP Key</code>了。</p><p>1.2. 填写APP ID 和 APP Key到主题配置文件<code>_config.yml</code></p><p>1.3. 运行<code>hexo g&amp;&amp;hexo d</code>推送到博客。</p><h5 id="来必力-livere"><a href="#来必力-livere" class="headerlink" title="来必力/livere"></a>来必力/livere</h5><p>2.1. 登陆 <a href="https://livere.com/" target="_blank" rel="noopener">来必力</a> 获取你的 LiveRe UID。</p><p>2.2. 填写LiveRe UID到主题配置文件<code>_config.yml</code></p><h5 id="畅言"><a href="#畅言" class="headerlink" title="畅言"></a>畅言</h5><p>3.1.获取APP ID 和 APP Key</p><p>请先登录或注册 <a href="http://changyan.kuaizhan.com/" target="_blank" rel="noopener">畅言</a>, 点击“立即免费获取畅言”，</p><p>新建站点，点击管理，点击评论插件&gt;评论管理，</p><p>点击后台总览，然后就能看到你的<code>APP ID</code>和<code>APP Key</code>了。</p><p>3.2. 填写APP ID 和 APP Key到主题配置文件<code>_config.yml</code></p><p>3.3. 运行<code>hexo g&amp;&amp;hexo d</code>推送到博客。</p><h5 id="gitment"><a href="#gitment" class="headerlink" title="gitment"></a>gitment</h5><p>4.1. 安装插件：</p><blockquote><p>npm i –save gitment</p></blockquote><p>4.2. 申请应用</p><p>在<a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">New OAuth App</a>为你的博客应用一个密钥:</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Application <span class="string">name:</span>随便写</span><br><span class="line">Homepage <span class="string">URL:</span>这个也可以随意写,就写你的博客地址就行</span><br><span class="line">Application <span class="string">description:</span>描述,也可以随意写</span><br><span class="line">Authorization callback <span class="string">URL:</span>这个必须写你的博客地址</span><br></pre></td></tr></table></figure><p>4.3. 配置</p><p>编辑主题配置文件<code>themes/*/_config.yml</code>:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Gitment</span></span><br><span class="line"><span class="comment"># Introduction: https://imsun.net/posts/gitment-introduction/</span></span><br><span class="line"><span class="attr">gitment:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  mint:</span> <span class="literal">true</span> <span class="comment"># RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway</span></span><br><span class="line"><span class="attr">  count:</span> <span class="literal">true</span> <span class="comment"># Show comments count in post meta area</span></span><br><span class="line"><span class="attr">  lazy:</span> <span class="literal">false</span> <span class="comment"># Comments lazy loading with a button</span></span><br><span class="line"><span class="attr">  cleanly:</span> <span class="literal">false</span> <span class="comment"># Hide 'Powered by ...' on footer, and more</span></span><br><span class="line"><span class="attr">  language:</span> <span class="comment"># Force language, or auto switch by theme</span></span><br><span class="line"><span class="attr">  github_user:</span> <span class="string">&#123;you</span> <span class="string">github</span> <span class="string">user</span> <span class="string">id&#125;</span></span><br><span class="line"><span class="attr">  github_repo:</span> <span class="string">公开的git仓库,评论会作为那个项目的issue</span></span><br><span class="line"><span class="attr">  client_id:</span> <span class="string">&#123;刚才申请的ClientID&#125;</span></span><br><span class="line"><span class="attr">  client_secret:</span> <span class="string">&#123;刚才申请的Client</span> <span class="string">Secret&#125;</span></span><br><span class="line"><span class="attr">  proxy_gateway:</span> <span class="comment"># Address of api proxy, See: https://github.com/aimingoo/intersect</span></span><br><span class="line"><span class="attr">  redirect_protocol:</span> <span class="comment"># Protocol of redirect_uri with force_redirect_pro</span></span><br></pre></td></tr></table></figure><h5 id="Disqus"><a href="#Disqus" class="headerlink" title="Disqus"></a>Disqus</h5><p>编辑 主题配置文件<code>themes/*/_config.yml</code>， 将 disqus 下的 enable 设定为 true，同时提供您的 shortname。count 用于指定是否显示评论数量。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">disqus:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  shortname:</span></span><br><span class="line"><span class="attr">  count:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="数据统计与分析"><a href="#数据统计与分析" class="headerlink" title="数据统计与分析"></a>数据统计与分析</h4><table><thead><tr><th></th><th>推荐指数</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td><a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="noopener">不蒜子</a></td><td>4</td><td>可直接将访问次数显示在您在网页上（也可不显示）</td><td>只计数</td></tr><tr><td>百度统计</td><td>3</td><td></td><td>收录慢</td></tr></tbody></table><h5 id="不蒜子"><a href="#不蒜子" class="headerlink" title="不蒜子"></a>不蒜子</h5><p>编辑 主题配置文件 <code>themes/*/_config.yml</code>中的<code>busuanzi_count</code>的配置项即可。</p><ul><li>当<code>enable: true</code>时，代表开启全局开关。</li><li>若<code>site_uv</code>（本站访客数）、<code>site_pv</code>（本站访客数）、<code>page_pv</code>（本文总阅读量）的值均为<code>false</code>时，不蒜子仅作记录而不会在页面上显示。</li></ul><p>注意：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">不蒜子官方因七牛强制过期原有的『dn-lbstatics<span class="selector-class">.qbox</span><span class="selector-class">.me</span>』域名（预计<span class="number">2018</span>年<span class="number">10</span>月初），与客服沟通数次无果，即使我提出为此付费也不行，只能更换域名到『busuanzi<span class="selector-class">.ibruce</span><span class="selector-class">.info</span>』！</span><br></pre></td></tr></table></figure><p>解决办法：</p><ol><li><p>找到主题调用不蒜子的swig文件。一般在”\themes*\layout_third-party\analytics\busuanzi-counter.swig”</p></li><li><p>更改域名</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">把原有的：</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">域名改一下即可：</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h5 id="百度统计"><a href="#百度统计" class="headerlink" title="百度统计"></a>百度统计</h5><ol><li>登录 <a href="http://tongji.baidu.com/" target="_blank" rel="noopener">百度统计</a>，定位到站点的代码获取页面</li><li>复制统计脚本 id，如图：<br>​         <img src="http://theme-next.iissnan.com/uploads/five-minutes-setup/analytics-baidu-id.png" alt="img">       </li><li>编辑 主题配置文件<code>themes/*/_config.yml</code>，修改字段 <code>google_analytics</code>，值设置成你的统计脚本 id。</li></ol><h4 id="内容分享服务"><a href="#内容分享服务" class="headerlink" title="内容分享服务"></a>内容分享服务</h4><table><thead><tr><th></th><th>推荐指数</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td><a href="http://share.baidu.com/" target="_blank" rel="noopener">百度分享</a></td><td>4</td><td>稳定</td><td>不太美观</td></tr><tr><td><a href="https://github.com/revir/need-more-share2" target="_blank" rel="noopener">need-more-share2</a></td><td>4</td><td>美观</td><td>更新不及时（比如微信分享API）</td></tr></tbody></table><h5 id="百度分享"><a href="#百度分享" class="headerlink" title="百度分享"></a>百度分享</h5><p>编辑 主题配置文件，添加/修改字段 <code>baidushare</code>，值为 <code>true</code>即可。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 百度分享服务</span></span><br><span class="line"><span class="attr">baidushare:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h5 id="need-more-share2"><a href="#need-more-share2" class="headerlink" title="need-more-share2"></a>need-more-share2</h5><p>编辑 主题配置文件，添加/修改字段 <code>needmoreshare2</code>，值为 <code>true</code>即可。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">needmoreshare2:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="搜索服务"><a href="#搜索服务" class="headerlink" title="搜索服务"></a>搜索服务</h4><table><thead><tr><th></th><th>推荐指数</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>Local Search</td><td>4</td><td>配置方便</td><td></td></tr><tr><td>Swiftype</td><td>2</td><td></td><td>需注册</td></tr><tr><td>Algolia</td><td>2</td><td></td><td>需注册</td></tr></tbody></table><h5 id="Local-Search"><a href="#Local-Search" class="headerlink" title="Local Search"></a>Local Search</h5><p>添加百度/谷歌/本地 自定义站点内容搜索</p><ol><li><p>安装 <code>hexo-generator-searchdb</code>，在站点的根目录下执行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-generator-searchdb --save</span></span><br></pre></td></tr></table></figure></li><li><p>编辑 站点配置文件，新增以下内容到任意位置：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">search:</span></span><br><span class="line"><span class="symbol">  path:</span> search.xml</span><br><span class="line"><span class="symbol">  field:</span> post</span><br><span class="line"><span class="symbol">  format:</span> html</span><br><span class="line"><span class="symbol">  limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure></li><li><p>编辑 主题配置文件，启用本地搜索功能：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="错误分析"><a href="#错误分析" class="headerlink" title="错误分析"></a>错误分析</h3><p>如果你使用Hexo遇到同样的问题,这里有一些常见问题的解决方案。</p><h4 id="YAML-Parsing-Error"><a href="#YAML-Parsing-Error" class="headerlink" title="YAML Parsing Error"></a>YAML Parsing Error</h4><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JS-YAML: incomplete <span class="built_in">explicit</span> mapping pair; a <span class="built_in">key</span> node <span class="built_in">is</span> missed <span class="built_in">at</span> line <span class="number">18</span>, column <span class="number">29</span>:</span><br><span class="line">      last_updated: Last updated: <span class="built_in">%s</span></span><br></pre></td></tr></table></figure><ol><li>参数中包含冒号，请用加引号，如<code>Last updated: %s</code></li></ol><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JS-YAML: bad indentation <span class="keyword">of</span> <span class="keyword">a</span> mapping entry <span class="keyword">at</span> <span class="built_in">line</span> <span class="number">18</span>, column <span class="number">31</span>:</span><br><span class="line">      last_updated：<span class="string">"Last updated: %s"</span></span><br></pre></td></tr></table></figure><ol start="2"><li>字段后面的冒号必须为<strong>英文冒号</strong>，如：last_updated:</li><li>字段冒号后面必须跟一个空格，如：last_updated: “Last updated: %s”</li></ol><h4 id="EMFILE-Error"><a href="#EMFILE-Error" class="headerlink" title="EMFILE Error"></a>EMFILE Error</h4><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Error: </span>EMFILE, too many open files</span><br></pre></td></tr></table></figure><p>生成大量的文件时，可能遇到EMFILE错误。</p><p>可以运行以下命令来增加允许同步I / O操作的数量。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">ulimit</span> -n 10000</span></span><br></pre></td></tr></table></figure><h4 id="Process-Out-of-Memory"><a href="#Process-Out-of-Memory" class="headerlink" title="Process Out of Memory"></a>Process Out of Memory</h4><p>当<code>hexo g</code>时，遇到以下错误：</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FATAL <span class="literal">ERROR</span>: CALL_AND_RETRY_LAST Allocation failed - <span class="keyword">process</span> <span class="keyword">out</span> <span class="keyword">of</span> memory</span><br></pre></td></tr></table></figure><p>如下，更改<code>hexo-cli</code>文件的第一行，来增大nodejs堆内存.该bug已在<a href="https://github.com/hexojs/hexo/issues/1735" target="_blank" rel="noopener">新版本</a>修复。</p><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env node --max_old_space_size=8192</span></span><br></pre></td></tr></table></figure><h4 id="Git-Deployment-Problems"><a href="#Git-Deployment-Problems" class="headerlink" title="Git Deployment Problems"></a>Git Deployment Problems</h4><ol><li>RPC failed</li></ol><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">error: </span>RPC failed; result=22, HTTP code = 403</span><br><span class="line"></span><br><span class="line">fatal: 'username.github.io' does not appear to be a git repository</span><br></pre></td></tr></table></figure><p>确保你有你的电脑上设置git正确或尝试使用HTTPS存储库URL。</p><ol start="2"><li>Error: ENOENT: no such file or directory</li></ol><p>这个需要有一定的git的知识，因为可能是由于写错了标签,类别,或文件名，导致本地和github冲突了，Git不能自动合并这一变化所以它打破了自动分支。</p><p>解决办法：</p><ol><li>检查文章的标签和类别,确保本地和github上是相同的。</li><li>合并分支（Commit）。</li><li>清除，重构。在站点目录下，命令行（即Git Bash）运行<code>hexo clean</code>和<code>hexo g</code></li><li>手动将站点目录下的<code>public</code>文件夹复制到您的桌面</li><li>从你的master分支切换到部署在本地分支。</li><li>从桌面复制<code>public</code>文件夹到本地分支。</li><li>合并分支到github（Commit）。</li><li>切回master分支。</li></ol><h4 id="Server-Problems"><a href="#Server-Problems" class="headerlink" title="Server Problems"></a>Server Problems</h4><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Error: </span>listen EADDRINUSE</span><br></pre></td></tr></table></figure><p>你可能使用相同的端口，同时开启了两个Hexo服务器。如果需要同时开启，可以尝试修改端口设置：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo<span class="built_in"> server </span>-p 5000</span><br></pre></td></tr></table></figure><h4 id="Plugin-Installation-Problems"><a href="#Plugin-Installation-Problems" class="headerlink" title="Plugin Installation Problems"></a>Plugin Installation Problems</h4><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm ERR! <span class="keyword">node</span><span class="title">-waf</span> configure build</span><br></pre></td></tr></table></figure><p>这个错误可能发生在试图安装一个用Cc++或另一个javascript语言编写的插件。确保您已经安装了正确的编译器在您的计算机上。</p><h4 id="Error-with-DTrace-Mac-OS-X"><a href="#Error-with-DTrace-Mac-OS-X" class="headerlink" title="Error with DTrace (Mac OS X)"></a>Error with DTrace (Mac OS X)</h4><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123; [Error: Cannot <span class="built_in">find</span> <span class="keyword">module</span> <span class="string">'./build/Release/DTraceProviderBindings'</span>] code: <span class="string">'MODULE_NOT_FOUND'</span> &#125;</span><br><span class="line">&#123; [Error: Cannot <span class="built_in">find</span> <span class="keyword">module</span> <span class="string">'./build/default/DTraceProviderBindings'</span>] code: <span class="string">'MODULE_NOT_FOUND'</span> &#125;</span><br><span class="line">&#123; [Error: Cannot <span class="built_in">find</span> <span class="keyword">module</span> <span class="string">'./build/Debug/DTraceProviderBindings'</span>] code: <span class="string">'MODULE_NOT_FOUND'</span> &#125;</span><br></pre></td></tr></table></figure><p>DTrace安装可能有问题，重装:</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">npm</span> install hexo --<span class="literal">no</span>-optional</span><br></pre></td></tr></table></figure><p>详见 <a href="https://github.com/hexojs/hexo/issues/1326#issuecomment-113871796" target="_blank" rel="noopener">#1326</a></p><h4 id="Iterate-Data-Model-on-Jade-or-Swig"><a href="#Iterate-Data-Model-on-Jade-or-Swig" class="headerlink" title="Iterate Data Model on Jade or Swig"></a>Iterate Data Model on Jade or Swig</h4><p>Hexo使用仓库的数据模型。这不是一个数组,所以你可能需要将对象转换为iterable。</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> post <span class="keyword">in</span> site.posts.toArray() %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><h4 id="Data-Not-Updated"><a href="#Data-Not-Updated" class="headerlink" title="Data Not Updated"></a>Data Not Updated</h4><p>一些数据不能更新或新生成的文件的最后一个版本完全相同。清理缓存，再试一次：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo clean</span></span><br></pre></td></tr></table></figure><h4 id="No-command-is-executed"><a href="#No-command-is-executed" class="headerlink" title="No command is executed"></a>No command is executed</h4><p>那个不能使用除<code>help</code>、<code>init</code>和<code>version</code>以外的命令行（即Git Bash）时,  有可能时站点目录下的  <code>package.json</code>文件，缺少<code>hexo</code> ，如下:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"hexo"</span>: &#123;</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"3.2.2"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Escape-Contents"><a href="#Escape-Contents" class="headerlink" title="Escape Contents"></a>Escape Contents</h4><p>Hexo使用Nunjucks渲染的页面. <code>{ { } }</code>或<code>{ % % }</code>将解析和可能会引起麻烦， 如果要在博文中出现，必须使用三引号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">​</span><br></pre></td></tr></table></figure>Hello {{ sensitive }}<p>​<figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line">#### ENOSPC Error (Linux)</span><br><span class="line"></span><br><span class="line">如果运行命令`$ hexo server` 返回一个错误:</span><br></pre></td></tr></table></figure></p><p>Error: watch ENOSPC …<br><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">可以通过运行`$ npm dedupe`或者以下命令行（即Git Bash）：</span><br></pre></td></tr></table></figure></p><p>$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf &amp;&amp; sudo sysctl -p<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">来增加测试时，你可以看见的文件数量。</span><br><span class="line"></span><br><span class="line">#### EMPERM Error (Windows Subsystem for Linux)</span><br><span class="line"></span><br><span class="line">如果在Windows Subsystem for Linux，运行命令`$ hexo server` 返回这个错误:</span><br></pre></td></tr></table></figure></p><p>Error: watch /path/to/hexo/theme/ EMPERM<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">因为目前在Windows Subsystem <span class="keyword">for</span> Linux中，有些内容更改时，还不能实时更新到hexo服务器。</span><br><span class="line"></span><br><span class="line">所以需要重新编译，再启动服务器：</span><br></pre></td></tr></table></figure></p><p>$ hexo generate<br>$ hexo server -s<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### Template render error</span><br><span class="line"></span><br><span class="line">有时运行命令`$ hexo generate` 返回一个错误:</span><br></pre></td></tr></table></figure></p><p>FATAL Something’s wrong. Maybe you can find the solution here: <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">http://hexo.io/docs/troubleshooting.html</a><br>Template render error: (unknown path)<br><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">这意味着有些认不出来单词在你的文件，并且很可能在你的新博文,或者配置文件`_config.yml`中，比如缩进错误：</span><br><span class="line"></span><br><span class="line">错误例子：</span><br></pre></td></tr></table></figure></p><p>plugins:<br>hexo-generator-feed<br>hexo-generator-sitemap<br><code>`</code></p><h3 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h3><h4 id="创建文章"><a href="#创建文章" class="headerlink" title="创建文章"></a>创建文章</h4><p>命令：</p><pre><code>$ hexo new [layout] &lt;title&gt;</code></pre><p>参数说明：</p><ul><li>[layout]可以为以下三种：</li></ul><table><thead><tr><th>参数名</th><th>功能</th><th>文章路径</th></tr></thead><tbody><tr><td>post</td><td>新建博文</td><td>source/_posts</td></tr><tr><td>page</td><td>新建页面（如404，分类）</td><td>source</td></tr><tr><td>draft</td><td>草稿</td><td>source/_drafts</td></tr></tbody></table><p>草稿可通过一下命令发布：</p><pre><code>$ hexo publish [layout] &lt;title&gt;</code></pre><ul><li><p>title注意：</p><p>不是博文标题，</p><p>是博文markdown文件的名字，</p><p>也是博文链接的后缀（如<code>https://www.simon96.online/2018/10/12/hexo-tutorial/</code>中的hexo-tutorial）</p></li></ul><h4 id="文章模版"><a href="#文章模版" class="headerlink" title="文章模版"></a>文章模版</h4><ul><li><p>创建模版</p><p>在新建文章时，Hexo 会根据 <code>scaffolds</code> 文件夹内相对应的文件来建立文件，例如：</p></li></ul><blockquote><p>$ hexo new blog “simon”</p></blockquote><p>​    在执行这行指令时，Hexo 会尝试在 <code>scaffolds</code> 文件夹中寻找 <code>blog.md</code>，并根据其内容建立文章。</p><ul><li><p>修改参数</p><p>以下是您可以在模版中使用的变量：</p></li></ul><table><thead><tr><th>变量</th><th>描述</th></tr></thead><tbody><tr><td>layout</td><td>布局</td></tr><tr><td>title</td><td>标题</td></tr><tr><td>date</td><td>文件建立日期</td></tr></tbody></table><h4 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h4><p>就是博文最上方以 <code>---</code> 分隔的那部分。</p><p>默认可以使用的Front-matter：</p><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td><code>layout</code></td><td>布局</td><td></td></tr><tr><td><code>title</code></td><td>标题</td><td></td></tr><tr><td><code>date</code></td><td>建立日期</td><td>文件建立日期</td></tr><tr><td><code>updated</code></td><td>更新日期</td><td>文件更新日期</td></tr><tr><td><code>comments</code></td><td>开启文章的评论功能</td><td>true</td></tr><tr><td><code>tags</code></td><td>标签（不适用于分页）</td><td></td></tr><tr><td><code>categories</code></td><td>分类（不适用于分页）</td><td></td></tr><tr><td><code>permalink</code></td><td>覆盖文章网址</td></tr></tbody></table><hr><h3 id="感谢支持"><a href="#感谢支持" class="headerlink" title="感谢支持"></a>感谢支持</h3><table><thead><tr><th>昵称</th><th>支持方式</th><th>数目</th><th>备注信息</th></tr></thead><tbody><tr><td>null</td><td>微信</td><td>10</td><td>持续等更新中。。</td></tr><tr><td>阿胜</td><td>支付宝</td><td>2.33</td><td>啊哈哈有博客了</td></tr><tr><td>Peng( ‘◕¸◕’ ).</td><td>支付宝</td><td>1</td><td>多谢</td></tr><tr><td>浮游(<a href="mailto:dulun109@qq.com" target="_blank" rel="noopener">dulun109@qq.com</a>)</td><td>QQ群红包</td><td>5</td><td>真的是，完全小白一个，多亏了博主的文章</td></tr><tr><td>ぉ绝伦ゞ独舞</td><td>QQ群红包</td><td>4</td><td>到时候有问题 请帮忙</td></tr><tr><td>胡鬧、是一種依賴</td><td>支付宝</td><td>5</td><td>棒棒哒~</td></tr><tr><td>null</td><td>微信</td><td>5</td><td>多谢，等更</td></tr><tr><td>追</td><td>支付宝</td><td>6.66</td><td>666666</td></tr><tr><td>Me’鮟</td><td>支付宝</td><td>10</td><td></td></tr><tr><td>低调的ヾ提莫</td><td>支付宝</td><td>2</td><td></td></tr><tr><td>Neil</td><td>友情链接</td><td>*</td><td><a href="https://zhuanlan.zhihu.com/p/48511707" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/48511707</a></td></tr></tbody></table><p>微信打赏看不到名字，但是还是很感谢，持续更新中。。。</p><p><amp-auto-ads type="adsense" ​="" data-ad-client="ca-pub-9883453800011618"><br></amp-auto-ads></p>]]></content>
    
    <summary type="html">
    
      如果你和我一样是小白，那么恭喜你！看完这篇文章，你也可以拥有一个这样的博客啦！
    
    </summary>
    
      <category term="hexo" scheme="https://www.simon96.online/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://www.simon96.online/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Typora tutorial(English edition)</title>
    <link href="https://www.simon96.online/2018/09/30/Typora-tutorial-English-edition/"/>
    <id>https://www.simon96.online/2018/09/30/Typora-tutorial-English-edition/</id>
    <published>2018-09-30T05:18:00.000Z</published>
    <updated>2018-11-03T04:00:33.055Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Markdown-For-Typora"><a href="#Markdown-For-Typora" class="headerlink" title="Markdown For Typora"></a>Markdown For Typora</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p><strong>Markdown</strong> is created by <a href="http://daringfireball.net/" target="_blank" rel="noopener">Daring Fireball</a>, the original guideline is <a href="http://daringfireball.net/projects/markdown/syntax" target="_blank" rel="noopener">here</a>. Its syntax, however, varies between different parsers or editors. <strong>Typora</strong> is using <a href="https://help.github.com/articles/github-flavored-markdown/" target="_blank" rel="noopener">GitHub Flavored Markdown</a>. </p><p><em>Outline</em></p><p>[TOC]</p><h2 id="Block-Elements"><a href="#Block-Elements" class="headerlink" title="Block Elements"></a>Block Elements</h2><h3 id="Paragraph-and-line-breaks"><a href="#Paragraph-and-line-breaks" class="headerlink" title="Paragraph and line breaks"></a>Paragraph and line breaks</h3><p>A paragraph is simply one or more consecutive lines of text. In markdown source code, paragraphs are separated by more than one blank lines. In Typora, you only need to press <code>Return</code> to create a new paragraph.</p><p>Press <code>Shift</code> + <code>Return</code> to create a single line break. However, most markdown parser will ignore single line break, to make other markdown parsers recognize your line break, you can leave two whitespace at the end of the line, or insert <code>&lt;br/&gt;</code>.</p><h3 id="Headers"><a href="#Headers" class="headerlink" title="Headers"></a>Headers</h3><p>Headers use 1-6 hash characters at the start of the line, corresponding to header levels 1-6. For example:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># This is an H1</span></span><br><span class="line"></span><br><span class="line"><span class="section">## This is an H2</span></span><br><span class="line"></span><br><span class="line"><span class="section">###### This is an H6</span></span><br></pre></td></tr></table></figure><p>In typora, input ‘#’s followed by title content, and press <code>Return</code> key will create a header.</p><h3 id="Blockquotes"><a href="#Blockquotes" class="headerlink" title="Blockquotes"></a>Blockquotes</h3><p>Markdown uses email-style &gt; characters for block quoting. They are presented as:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; This is a blockquote with two paragraphs. This is first paragraph.</span></span><br><span class="line">&gt;</span><br><span class="line"><span class="quote">&gt; This is second pragraph.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="quote">&gt; This is another blockquote with one paragraph. There is three empty line to seperate two blockquote.</span></span><br></pre></td></tr></table></figure><p>In typora, just input ‘&gt;’ followed by quote contents a block quote is  generated. Typora will insert proper ‘&gt;’ or line break for you. Block quote inside anther block quote is allowed by adding additional levels of ‘&gt;’. </p><h3 id="Lists"><a href="#Lists" class="headerlink" title="Lists"></a>Lists</h3><p>Input <code>* list item 1</code> will create an un-ordered list, the <code>*</code> symbol can be replace with <code>+</code> or <code>-</code>. </p><p>Input <code>1. list item 1</code> will create an ordered list, their markdown source code is like:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">## un-ordered list</span></span><br><span class="line"><span class="bullet">*   </span>Red</span><br><span class="line"><span class="bullet">*   </span>Green</span><br><span class="line"><span class="bullet">*   </span>Blue</span><br><span class="line"></span><br><span class="line"><span class="section">## ordered list</span></span><br><span class="line"><span class="bullet">1.  </span>Red</span><br><span class="line"><span class="bullet">2. </span>Green</span><br><span class="line"><span class="bullet">3.</span>Blue</span><br></pre></td></tr></table></figure><h3 id="Task-List"><a href="#Task-List" class="headerlink" title="Task List"></a>Task List</h3><p>Task lists are lists with items marked as either [ ] or [x] (incomplete or complete). For example:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>[ ] a task list item</span><br><span class="line"><span class="bullet">- </span>[ ] list syntax required</span><br><span class="line"><span class="bullet">- </span>[ ] normal <span class="strong">**formatting**</span>, @mentions, #1234 refs</span><br><span class="line"><span class="bullet">- </span>[ ] incomplete</span><br><span class="line"><span class="bullet">- </span>[x] completed</span><br></pre></td></tr></table></figure><p>You can change the complete/incomplete state by click the checkbox before the item.</p><h3 id="Fenced-Code-Blocks"><a href="#Fenced-Code-Blocks" class="headerlink" title="(Fenced) Code Blocks"></a>(Fenced) Code Blocks</h3><p>Typora only support fences in Github Flavored Markdown. Original code blocks in markdown is not supported.</p><p>Using fences is easy: Input ``` and press <code>return</code>. Add an optional language identifier after ``` and we’ll run it through syntax highlighting:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Here&apos;s an example:</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">function test() &#123;</span><br><span class="line">  console.log(&quot;notice the blank line before this function?&quot;);</span><br><span class="line">&#125;</span><br><span class="line">​```</span><br><span class="line"></span><br><span class="line">syntax highlighting:</span><br><span class="line">```ruby</span><br><span class="line">require &apos;redcarpet&apos;</span><br><span class="line">markdown = Redcarpet.new(&quot;Hello World!&quot;)</span><br><span class="line">puts markdown.to_html</span><br><span class="line">​```</span><br></pre></td></tr></table></figure><h3 id="Math-Blocks"><a href="#Math-Blocks" class="headerlink" title="Math Blocks"></a>Math Blocks</h3><p>You can render <em>LaTeX</em> mathematical expressions using <strong>MathJax</strong>.</p><p>Input <code>$$</code>, then press ‘Return’ key will trigger an input field which accept <em>Tex/LaTex</em> source. Following is an example:<br>$$<br>\mathbf{V}_1 \times \mathbf{V}_2 =  \begin{vmatrix}<br>\mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \<br>\frac{\partial X}{\partial u} &amp;  \frac{\partial Y}{\partial u} &amp; 0 \<br>\frac{\partial X}{\partial v} &amp;  \frac{\partial Y}{\partial v} &amp; 0 \<br>\end{vmatrix}<br>$$</p><p>In markdown source file, math block is <em>LaTeX</em> expression wrapped by ‘$$’ mark:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\mathbf&#123;V&#125;<span class="emphasis">_1 \times \mathbf&#123;V&#125;_</span>2 =  \begin&#123;vmatrix&#125; </span><br><span class="line">\mathbf&#123;i&#125; &amp; \mathbf&#123;j&#125; &amp; \mathbf&#123;k&#125; \\</span><br><span class="line">\frac&#123;\partial X&#125;&#123;\partial u&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial u&#125; &amp; 0 \\</span><br><span class="line">\frac&#123;\partial X&#125;&#123;\partial v&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial v&#125; &amp; 0 \\</span><br><span class="line">\end&#123;vmatrix&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><h3 id="Tables"><a href="#Tables" class="headerlink" title="Tables"></a>Tables</h3><p>Input <code>| First Header  | Second Header |</code> and press <code>return</code> key will create a table with two column.</p><p>After table is created, focus on that table will pop up a toolbar for table, where you can resize, align, or delete table. You can also use context menu to copy and add/delete column/row.</p><p>Following descriptions can be skipped, as markdown source code for tables are generated by typora automatically.</p><p>In markdown source code, they look like:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| First Header  | Second Header |</span><br><span class="line">| ------------- | ------------- |</span><br><span class="line">| Content Cell  | Content Cell  |</span><br><span class="line">| Content Cell  | Content Cell  |</span><br></pre></td></tr></table></figure><p>You can also include inline Markdown such as links, bold, italics, or strikethrough.</p><p>Finally, by including colons : within the header row, you can define text to be left-aligned, right-aligned, or center-aligned:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| Left-Aligned  | Center Aligned  | Right Aligned |</span><br><span class="line">| :------------ |:---------------:| -----:|</span><br><span class="line">| col 3 is      | some wordy text | $1600 |</span><br><span class="line">| col 2 is      | centered        |   $12 |</span><br><span class="line">| zebra stripes | are neat        |    $1 |</span><br></pre></td></tr></table></figure><p>A colon on the left-most side indicates a left-aligned column; a colon on the right-most side indicates a right-aligned column; a colon on both sides indicates a center-aligned column.</p><h3 id="Footnotes"><a href="#Footnotes" class="headerlink" title="Footnotes"></a>Footnotes</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">You can create footnotes like this[^footnote].</span><br><span class="line"></span><br><span class="line">[<span class="symbol">^footnote</span>]: <span class="link">Here is the *text* of the **footnote**.</span></span><br></pre></td></tr></table></figure><p>will produce:</p><p>You can create footnotes like this[^footnote].</p><p>[^footnote]: Here is the <em>text</em> of the <strong>footnote</strong>.</p><p>Mouse on the ‘footnote’ superscript to see content of the footnote.</p><h3 id="Horizontal-Rules"><a href="#Horizontal-Rules" class="headerlink" title="Horizontal Rules"></a>Horizontal Rules</h3><p>Input <code>***</code> or <code>---</code> on a blank line and press <code>return</code> will draw a horizontal line.</p><hr><h3 id="YAML-Front-Matter"><a href="#YAML-Front-Matter" class="headerlink" title="YAML Front Matter"></a>YAML Front Matter</h3><p>Typora support <a href="http://jekyllrb.com/docs/frontmatter/" target="_blank" rel="noopener">YAML Front Matter</a> now. Input <code>---</code> at the top of the article and then press <code>Enter</code> will introduce one. Or insert one metadata block from the menu.</p><h3 id="Table-of-Contents-TOC"><a href="#Table-of-Contents-TOC" class="headerlink" title="Table of Contents (TOC)"></a>Table of Contents (TOC)</h3><p>Input <code>[toc]</code> then press <code>Return</code> key will create a section for “Table of Contents” extracting all headers from one’s writing, its contents will be updated automatically. </p><h3 id="Diagrams-Sequence-Flowchart-and-Mermaid"><a href="#Diagrams-Sequence-Flowchart-and-Mermaid" class="headerlink" title="Diagrams (Sequence, Flowchart and Mermaid)"></a>Diagrams (Sequence, Flowchart and Mermaid)</h3><p>Typora supports, <a href="https://bramp.github.io/js-sequence-diagrams/" target="_blank" rel="noopener">sequence</a>, <a href="http://flowchart.js.org/" target="_blank" rel="noopener">flowchart</a> and <a href="https://knsv.github.io/mermaid/#mermaid" target="_blank" rel="noopener">mermaid</a>, after this feature is enabled from preference panel.</p><p>See this <a href="http://support.typora.io/Draw-Diagrams-With-Markdown/" target="_blank" rel="noopener">document</a> for detail.</p><h2 id="Span-Elements"><a href="#Span-Elements" class="headerlink" title="Span Elements"></a>Span Elements</h2><p>Span elements will be parsed and rendered right after your typing. Moving cursor in middle of those span elements will expand those elements into markdown source. Following will explain the syntax of those span element.</p><h3 id="Links"><a href="#Links" class="headerlink" title="Links"></a>Links</h3><p>Markdown supports two style of links: inline and reference.</p><p>In both styles, the link text is delimited by [square brackets].</p><p>To create an inline link, use a set of regular parentheses immediately after the link text’s closing square bracket. Inside the parentheses, put the URL where you want the link to point, along with an optional title for the link, surrounded in quotes. For example:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">This is [<span class="string">an example</span>](<span class="link">http://example.com/ "Title"</span>) inline link.</span><br><span class="line"></span><br><span class="line">[<span class="string">This link</span>](<span class="link">http://example.net/</span>) has no title attribute.</span><br></pre></td></tr></table></figure><p>will produce:</p><p>This is <a href="http://example.com/&quot;Title&quot;" target="_blank" rel="noopener">an example</a> inline link. (<code>&lt;p&gt;This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot;&gt;</code>)</p><p><a href="http://example.net/" target="_blank" rel="noopener">This link</a> has no title attribute. (<code>&lt;p&gt;&lt;a href=&quot;http://example.net/&quot;&gt;This link&lt;/a&gt; has no</code>)</p><h4 id="Internal-Links"><a href="#Internal-Links" class="headerlink" title="Internal Links"></a>Internal Links</h4><p><strong>You can set the href to headers</strong>, which will create a bookmark that allow you to jump to that section after clicking. For example:</p><p>Command(on Windows: Ctrl) + Click <a href="#block-elements">This link</a> will jump to header <code>Block Elements</code>. To see how to write that, please move cursor or click that link with <code>⌘</code> key pressed to expand the element into markdown source.</p><h4 id="Reference-Links"><a href="#Reference-Links" class="headerlink" title="Reference Links"></a>Reference Links</h4><p>Reference-style links use a second set of square brackets, inside which you place a label of your choosing to identify the link:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">This is [<span class="string">an example</span>][<span class="symbol">id</span>] reference-style link.</span><br><span class="line"></span><br><span class="line">Then, anywhere in the document, you define your link label like this, on a line by itself:</span><br><span class="line"></span><br><span class="line">[<span class="symbol">id</span>]: <span class="link">http://example.com/  "Optional Title Here"</span></span><br></pre></td></tr></table></figure><p>In typora, they will be rendered like:</p><p>This is <a href="http://example.com/" title="Optional Title Here" target="_blank" rel="noopener">an example</a> reference-style link.</p><p>The implicit link name shortcut allows you to omit the name of the link, in which case the link text itself is used as the name. Just use an empty set of square brackets — e.g., to link the word “Google” to the google.com web site, you could simply write:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">Google</span>][<span class="symbol"></span>]</span><br><span class="line">And then define the link:</span><br><span class="line"></span><br><span class="line">[<span class="symbol">Google</span>]: <span class="link">http://google.com/</span></span><br></pre></td></tr></table></figure><p>In typora click link will expand it for editing, command+click will open the hyperlink in web browser.</p><h3 id="URLs"><a href="#URLs" class="headerlink" title="URLs"></a>URLs</h3><p>Typora allows you to insert urls as links, wrapped by <code>&lt;</code>brackets<code>&gt;</code>.</p><p><code>&lt;i@typora.io&gt;</code> becomes <a href="mailto:&#x69;&#64;&#116;&#121;&#112;&#x6f;&#114;&#x61;&#x2e;&#105;&#x6f;" target="_blank" rel="noopener">&#x69;&#64;&#116;&#121;&#112;&#x6f;&#114;&#x61;&#x2e;&#105;&#x6f;</a>.</p><p>Typora will aslo auto link standard URLs. e.g: <a href="http://www.google.com" target="_blank" rel="noopener">www.google.com</a>.</p><h3 id="Images"><a href="#Images" class="headerlink" title="Images"></a>Images</h3><p>Image looks similar with links, but it requires an additional <code>!</code> char before the start of link. Image syntax looks like this:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">Alt text</span>](<span class="link">/path/to/img.jpg</span>)</span><br><span class="line"></span><br><span class="line">![<span class="string">Alt text</span>](<span class="link">/path/to/img.jpg "Optional title"</span>)</span><br></pre></td></tr></table></figure><p>You are able to use drag &amp; drop to insert image from image file or we browser. And modify the markdown source code by clicking on the image. Relative path will be used if image is in same directory or sub-directory with current editing document when drag &amp; drop.</p><p>For more tips on images, please read <a href="http://support.typora.io//Images/" target="_blank" rel="noopener">http://support.typora.io//Images/</a></p><h3 id="Emphasis"><a href="#Emphasis" class="headerlink" title="Emphasis"></a>Emphasis</h3><p>Markdown treats asterisks (<code>*</code>) and underscores (<code>_</code>) as indicators of emphasis. Text wrapped with one <code>*</code> or <code>_</code> will be wrapped with an HTML <code>&lt;em&gt;</code> tag. E.g:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*single asterisks*</span></span><br><span class="line"></span><br><span class="line"><span class="emphasis">_single underscores_</span></span><br></pre></td></tr></table></figure><p>output: </p><p><em>single asterisks</em></p><p><em>single underscores</em></p><p>GFM will ignores underscores in words, which is commonly used in code and names, like this:</p><blockquote><p>wow_great_stuff</p><p>do_this_and_do_that_and_another_thing.</p></blockquote><p>To produce a literal asterisk or underscore at a position where it would otherwise be used as an emphasis delimiter, you can backslash escape it:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\<span class="emphasis">*this text is surrounded by literal asterisks\*</span></span><br></pre></td></tr></table></figure><p>Typora recommends to use <code>*</code> symbol.</p><h3 id="Strong"><a href="#Strong" class="headerlink" title="Strong"></a>Strong</h3><p>double *’s or _’s will be wrapped with an HTML <code>&lt;strong&gt;</code> tag, e.g:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**double asterisks**</span></span><br><span class="line"></span><br><span class="line"><span class="strong">__double underscores__</span></span><br></pre></td></tr></table></figure><p>output:</p><p><strong>double asterisks</strong></p><p><strong>double underscores</strong></p><p>Typora recommends to use <code>**</code> symbol.</p><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><p>To indicate a span of code, wrap it with backtick quotes (`). Unlike a pre-formatted code block, a code span indicates code within a normal paragraph. For example:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Use the <span class="code">`printf()`</span> function.</span><br></pre></td></tr></table></figure><p>will produce:</p><p>Use the <code>printf()</code> function.</p><h3 id="Strikethrough"><a href="#Strikethrough" class="headerlink" title="Strikethrough"></a>Strikethrough</h3><p>GFM adds syntax to create strikethrough text, which is missing from standard Markdown.</p><p><code>~~Mistaken text.~~</code> becomes <del>Mistaken text.</del></p><h3 id="Underline"><a href="#Underline" class="headerlink" title="Underline"></a>Underline</h3><p>Underline is powered by raw HTML.</p><p><code>&lt;u&gt;Underline&lt;/u&gt;</code> becomes <u>Underline</u>.</p><h3 id="Emoji-smile"><a href="#Emoji-smile" class="headerlink" title="Emoji :smile:"></a>Emoji :smile:</h3><p>Input emoji with syntax <code>:smile:</code>. </p><p>User can trigger auto-complete suggestions for emoji by pressing <code>ESC</code> key, or trigger it automatically after enable it on preference panel. Also, input UTF8 emoji char directly from <code>Edit</code> -&gt; <code>Emoji &amp; Symbols</code> from menu bar is also supported. </p><h3 id="Inline-Math"><a href="#Inline-Math" class="headerlink" title="Inline Math"></a>Inline Math</h3><p>To use this feature, first, please enable it in <code>Preference</code> Panel -&gt; <code>Markdown</code> Tab. Then use <code>$</code> to wrap TeX command, for example: <code>$\lim_{x \to \infty} \exp(-x) = 0$</code> will be rendered as LaTeX command. </p><p>To trigger inline preview for inline math: input “$”, then press <code>ESC</code> key, then input TeX command, a preview tooltip will be visible like below:</p><p><img src="http://typora.io/img/inline-math.gif" style="zoom:50%;"></p><h3 id="Subscript"><a href="#Subscript" class="headerlink" title="Subscript"></a>Subscript</h3><p>To use this feature, first, please enable it in <code>Preference</code> Panel -&gt; <code>Markdown</code> Tab. Then use <code>~</code> to wrap subscript content, for example: <code>H~2~O</code>, <code>X~long\ text~</code>/</p><h3 id="Superscript"><a href="#Superscript" class="headerlink" title="Superscript"></a>Superscript</h3><p>To use this feature, first, please enable it in <code>Preference</code> Panel -&gt; <code>Markdown</code> Tab. Then use <code>^</code> to wrap superscript content, for example: <code>X^2^</code>.</p><h3 id="Highlight"><a href="#Highlight" class="headerlink" title="Highlight"></a>Highlight</h3><p>To use this feature, first, please enable it in <code>Preference</code> Panel -&gt; <code>Markdown</code> Tab. Then use <code>==</code> to wrap higglighted content, for example: <code>==highlight==</code>. </p><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><p>You could use HTML to style content what pure Markdown does not support, for example, use <code>&lt;span style=&quot;color:red&quot;&gt;this text is red&lt;/span&gt;</code> to add text with red color.</p><h3 id="Embed-Contents"><a href="#Embed-Contents" class="headerlink" title="Embed Contents"></a>Embed Contents</h3><p>Some websites provide iframe-based embed code which you could also paste into Typora, for example:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe height='265' scrolling='no' title='Fancy Animated SVG Menu' src='http://codepen.io/jeangontijo/embed/OxVywj/?height=265&amp;theme-id=0&amp;default-tab=css,result&amp;embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><h3 id="Video"><a href="#Video" class="headerlink" title="Video"></a>Video</h3><p>You could use the <code>&lt;video&gt;</code> HTML tag to embed videos, for example:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;video src="xxx.mp4" /&gt;</span><br></pre></td></tr></table></figure><h3 id="Other-HTML-Support"><a href="#Other-HTML-Support" class="headerlink" title="Other HTML Support"></a>Other HTML Support</h3><p>You could find details <a href="http://support.typora.io/HTML/" target="_blank" rel="noopener">here</a>.</p><p>@ thanks to typora.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="hexo" scheme="https://www.simon96.online/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://www.simon96.online/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://www.simon96.online/2018/09/24/hello-world/"/>
    <id>https://www.simon96.online/2018/09/24/hello-world/</id>
    <published>2018-09-24T11:27:17.324Z</published>
    <updated>2018-11-10T06:33:29.597Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
  </entry>
  
</feed>
